{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/mixins/helpers.js","webpack:///./src/store/modules/general/cases.js","webpack:///./src/store/modules/general/roles.js","webpack:///./src/store/modules/general/users.js","webpack:///./src/store/modules/graph.js","webpack:///./src/store/modules/topics.js","webpack:///./src/store/modules/bdi/organization.js","webpack:///./src/store/modules/bdi/actor.js","webpack:///./src/store/modules/bdi/issue.js","webpack:///./src/store/modules/bdi/photo.js","webpack:///./src/store/modules/trend.js","webpack:///./src/store/modules/news.js","webpack:///./src/store/modules/medsos.js","webpack:///./src/store/modules/config.js","webpack:///./src/store/modules/auth.js","webpack:///./src/store/modules/errors.js","webpack:///./src/store/index.js","webpack:///./src/router/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","secureLs","SecureLS","isCompression","methods","arrayToString","map","item","join","replace","splitStr","str","splitter","split","capitalizeFirstLetter","string","charAt","toUpperCase","trimmedStr","maxLength","isHtml","this","removeTags","trimmedString","substr","Math","min","lastIndexOf","toString","showString","numberWithDot","number","parts","nFormatter","num","digits","lookup","symbol","rx","reverse","find","toFixed","getUsernameSosmed","isURL","isValidHttpUrl","url","URL","_","protocol","dateFormatPicker","classes","date","disabled","moment","getTime","subtract","hours","_d","Date","datetimeFormat","datetime","formatFrom","formatTo","dtFormat","locale","format","log","encodeDetailData","encodeURI","btoa","JSON","stringify","decodeDetailData","parse","atob","decodeURI","decodeBase64","getDefaultImage","img","$store","getters","getErrorImage","ls_getData","ls_attachListener","callback","ls","on","getOsmDarkModeAccessToken","access_token","process","filters","cancelList","cancelListGatra","cancelSearchEvent","cancelDetailEvent","cancelDetailEventIan","cancelDetailEventReport","cancelDynamicsNationalThreats","cancelListTopics","cancelListOrganization","cancelSearchOrganization","cancelListLogHistory","cancelIanOrganization","cancelRelatedOrganizations","cancelMotiveAgenda","cancelListActor","cancelSearchActor","cancelIanFigure","cancelRelatedFigures","cancelSearchIssue","cancelFindSuggestion","cancelListPhoto","cancelListAlbum","cancelListTrend","cancelListNews","cancelListTrending","cancelListTweet","cancelListFollowing","cancelLDetailProfile","config","namespaced","state","theme","list_gatra","label","mutations","setTheme","VUE_APP_DEFAULT_IMAGE","getDefaultImageProfile","VUE_APP_DEFAULT_IMAGE_PROFILE","actions","auth","token","user","profile","authUser","userData","setToken","axios","defaults","headers","common","axiosGraphql","clearAuth","setProfile","isAuthenticated","getUser","getToken","login","commit","dispatch","email","password","params","FormData","append","post","resp","catch","response","logout","status","root","getProfile","updateProfile","repeat_password","put","toLowerCase","errors","handleApiResponse","status_code","router","currentRoute","Event","$emit","cancelToken","axiosOrigin","CancelToken","cases","status_list","cancel","status_detail","list","detail","setStatusList","setStatusDetail","setList","setDetail","getList","limit","page","keyword","keys","isCancel","getDetail","id","rootState","gatra","description","update","delete","roles","users","role_id","search","dir","username","assign_to_case","upline_id","graph","status_list_gatra","status_search_event","status_detail_event","status_detail_event_ian","status_detail_event_report","status_dynamics_national_threats","search_event","detail_event","detail_event_ian","detail_event_report","dynamics_national_threats","setStatusListGatra","setStatusSearchEvent","setStatusDetailEvent","setStatusDetailEventIan","setStatusDetailEventReport","setStatusDynamicsNationalThreats","setListGatra","setSearchEvent","setDetailEvent","setDetailEventIan","setDetailEventReport","setDynamicsNationalThreats","getListGatra","axiosNtx","getSearchEvent","query","source","date_from","date_to","getDetailEvent","getDetailEventIan","location_id","group_by","getDetailEventReport","getDynamicsNationalThreats","topics","status_list_topics","list_topics","detail_topic","setStatusListTopics","setListTopics","setDetailTopic","getListTopics","created_by","updated_by","variables","topic","createTopic","updateTopic","organization","status_list_organization","status_search_organization","status_list_log_history","status_ian_organization","status_related_organizations","status_motive_agenda","list_organization","search_organization","list_log_history","ian_organization","related_organizations","motive_agenda","setStatusListOrganization","setStatusSearchOrganization","setStatusListLogHistory","setStatusIanOrganization","setStatusRelatedOrganizations","setStatusMotiveAgenda","setListOrganization","setSearchOrganization","setListLogHistory","setIanOrganization","setRelatedOrganizations","setMotiveAgenda","getListOrganization","orderShort","getOrganization","detailOrganization","index","getListLogHIstory","getHistories","getIanOrganization","getSearchOrganization","doc","getRelatedOrganizations","getMotiveAgenda","actor","status_list_actor","status_search_actor","status_ian_figure","status_related_figures","list_actor","search_actor","ian_figure","related_figures","setStatusListActor","setStatusSearchActor","setStatusIanFigure","setStatusRelatedFigures","setListActor","setSearchActor","setIanFigure","setRelatedFigures","getListActor","getFigure","getSearchActor","detailFigure","getIanFigure","getRelatedFigures","issue","status_search_issue","status_find_suggestion","search_issue","find_suggestion","setStatusSearchIssue","setStatusFindSuggestion","setSearchIssue","setFindSuggestion","sort","getSearchIssue","getFindSuggestion","status_list_photo","status_list_album","status_detail_album","list_photo","list_album","detail_album","setStatusListPhoto","setStatusListAlbum","setStatusDetailAlbum","setListPhoto","setListAlbum","setDetailAlbum","getListPhoto","deletePhoto","getListAlbum","getDetailAlbum","createAlbum","updateAlbum","deleteAlbum","trend","status_list_trend","list_trend","detail_trend","setStatusListTrend","setListTrend","setDetaildTrend","getListTrend","limitWordId","filter","trends","createTrend","updateTrend","changeStatus","changeTrendStatus","refreshTrend","news","status_list_news","list_news","search_news","setStatusListNews","setListNews","setSearchNews","getListNews","startDate","endDate","searchNews","medsos","status_list_trending","status_list_tweet","status_detail_following","status_detail_profile","list_trending","list_tweet","list_tweet_trending","detail_following","detail_profile","setStatusListTrending","setStatusListTweet","setStatusListFollowing","setStatusDetailProfile","setListTrending","setListTweet","setListTweetTrending","setListFollowing","setDetailProfile","getListTrending","start_date","end_date","getListTweet","fromTrending","q","getListFollowing","getDetailProfile","Vue","use","Vuex","Store","isIdle","photo","plugins","createPersistedState","storage","getItem","setItem","set","removeItem","remove","paths","Router","routes","path","component","require","meta","layout","requiresAuth","children"],"mappings":"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","file":"js/app~c714bc7b.ce17cec0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app~c714bc7b\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app~c714bc7b\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-045bacbc\":\"03b4f007\",\"chunk-0dac43ed\":\"896f3fb9\",\"chunk-1e4b4f4b\":\"9d423cc7\",\"chunk-253f4f5d\":\"8806d805\",\"chunk-264f16e2\":\"82c8aef4\",\"chunk-27f958b3\":\"8217753f\",\"chunk-2d0aeba4\":\"2006b4b2\",\"chunk-2d0aef28\":\"cd8cbf3e\",\"chunk-2d0b2958\":\"94bd6201\",\"chunk-2d0b5966\":\"e2bb6167\",\"chunk-2d0c5389\":\"60bbea24\",\"chunk-2d0be0de\":\"1fb7bfa2\",\"chunk-2d213536\":\"0c56356e\",\"chunk-2d0c8612\":\"595c3ac4\",\"chunk-2d0d34d8\":\"e365ba71\",\"chunk-2d0d5c0f\":\"fd77071a\",\"chunk-2d0e2899\":\"4e1e66c3\",\"chunk-2d20746f\":\"edd24881\",\"chunk-2d225f0e\":\"4f41eb09\",\"chunk-2d2293a9\":\"82394955\",\"chunk-351f6ff3\":\"4b02f454\",\"chunk-36fcfb3b\":\"d5296938\",\"chunk-392bcfdf\":\"bc2fbb03\",\"chunk-3c1e30f4\":\"406b4f7b\",\"chunk-2c9f623a\":\"21db5d6a\",\"chunk-2d2248b6\":\"efbfeb47\",\"chunk-55ac22a3\":\"e52d7b37\",\"chunk-e24ef14a\":\"e191d137\",\"chunk-0b4be6dc\":\"145b5064\",\"chunk-3ecd16db\":\"e69a3770\",\"chunk-44dae684\":\"708d6d62\",\"chunk-47b7c78b\":\"f1d2e35d\",\"chunk-4c27b1e5\":\"5ce840f5\",\"chunk-4cf1595b\":\"2b441ba9\",\"chunk-501bd124\":\"56e251fd\",\"chunk-529f8d9f\":\"bceb4066\",\"chunk-561eea10\":\"290628d7\",\"chunk-5673e349\":\"96c5dfb0\",\"chunk-5ad37190\":\"0b68a193\",\"chunk-5b0c4918\":\"3273328f\",\"chunk-5b0e40b4\":\"7f339217\",\"chunk-77518700\":\"4fc4668e\",\"chunk-ad6681d6\":\"6cabf1d4\",\"chunk-6ca69536\":\"4d16e979\",\"chunk-73212f64\":\"e32142cb\",\"chunk-774ea17e\":\"4d050a83\",\"chunk-774f4689\":\"03fa8e80\",\"chunk-7750ab43\":\"7b87dfc1\",\"chunk-7766b4ea\":\"ff661814\",\"chunk-776718c3\":\"144c877b\",\"chunk-7cf6cb0a\":\"e83497ad\",\"chunk-82b24ba2\":\"17962f28\",\"chunk-060fccc8\":\"5daf001c\",\"chunk-119d4da3\":\"1035aa4f\",\"chunk-1cd316f5\":\"7f64224d\",\"chunk-26624bd4\":\"a0b71416\",\"chunk-2aeb6233\":\"8e238c7a\",\"chunk-2d0e97b4\":\"69973736\",\"chunk-58d44302\":\"fc92afb5\",\"chunk-eb00410c\":\"9cc81094\",\"chunk-5a3dbce8\":\"08b4e0b8\",\"chunk-8b9b7d0a\":\"1bec7c3a\",\"chunk-18daba5a\":\"3900a3f4\",\"chunk-2d21b33b\":\"6c10eecc\",\"chunk-2ea4a98e\":\"27fc8dbe\",\"chunk-4e1b9991\":\"a0f726e1\",\"chunk-4eb6e2e9\":\"a3236a51\",\"chunk-641f7d7a\":\"5107f9c5\",\"chunk-98aeed2e\":\"cee3f97f\",\"chunk-98da2888\":\"f7aeccd2\",\"chunk-98db9b3c\":\"fbe6dcc1\",\"chunk-a16c32fe\":\"1848e3ff\",\"chunk-a442f142\":\"53ace71c\",\"chunk-b38ccd10\":\"471f90c8\",\"chunk-bbe9979a\":\"804f43fc\",\"chunk-c82442b8\":\"2fa603b9\",\"chunk-ca5179aa\":\"af56dc26\",\"chunk-d9f72ee2\":\"d35eaf3e\",\"chunk-db381c64\":\"2d22c4c6\",\"chunk-df2530de\":\"f8ad8c3b\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-0dac43ed\":1,\"chunk-1e4b4f4b\":1,\"chunk-253f4f5d\":1,\"chunk-27f958b3\":1,\"chunk-351f6ff3\":1,\"chunk-36fcfb3b\":1,\"chunk-392bcfdf\":1,\"chunk-3c1e30f4\":1,\"chunk-2c9f623a\":1,\"chunk-0b4be6dc\":1,\"chunk-44dae684\":1,\"chunk-47b7c78b\":1,\"chunk-4c27b1e5\":1,\"chunk-501bd124\":1,\"chunk-529f8d9f\":1,\"chunk-561eea10\":1,\"chunk-5673e349\":1,\"chunk-5ad37190\":1,\"chunk-5b0c4918\":1,\"chunk-5b0e40b4\":1,\"chunk-ad6681d6\":1,\"chunk-6ca69536\":1,\"chunk-060fccc8\":1,\"chunk-119d4da3\":1,\"chunk-1cd316f5\":1,\"chunk-26624bd4\":1,\"chunk-58d44302\":1,\"chunk-eb00410c\":1,\"chunk-5a3dbce8\":1,\"chunk-8b9b7d0a\":1,\"chunk-4e1b9991\":1,\"chunk-4eb6e2e9\":1,\"chunk-641f7d7a\":1,\"chunk-a16c32fe\":1,\"chunk-b38ccd10\":1,\"chunk-ca5179aa\":1,\"chunk-d9f72ee2\":1,\"chunk-db381c64\":1,\"chunk-df2530de\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-045bacbc\":\"31d6cfe0\",\"chunk-0dac43ed\":\"e91eee4f\",\"chunk-1e4b4f4b\":\"f21ec3fc\",\"chunk-253f4f5d\":\"2cb89086\",\"chunk-264f16e2\":\"31d6cfe0\",\"chunk-27f958b3\":\"7c64fe54\",\"chunk-2d0aeba4\":\"31d6cfe0\",\"chunk-2d0aef28\":\"31d6cfe0\",\"chunk-2d0b2958\":\"31d6cfe0\",\"chunk-2d0b5966\":\"31d6cfe0\",\"chunk-2d0c5389\":\"31d6cfe0\",\"chunk-2d0be0de\":\"31d6cfe0\",\"chunk-2d213536\":\"31d6cfe0\",\"chunk-2d0c8612\":\"31d6cfe0\",\"chunk-2d0d34d8\":\"31d6cfe0\",\"chunk-2d0d5c0f\":\"31d6cfe0\",\"chunk-2d0e2899\":\"31d6cfe0\",\"chunk-2d20746f\":\"31d6cfe0\",\"chunk-2d225f0e\":\"31d6cfe0\",\"chunk-2d2293a9\":\"31d6cfe0\",\"chunk-351f6ff3\":\"a4ee8428\",\"chunk-36fcfb3b\":\"e0f765bf\",\"chunk-392bcfdf\":\"dd0227d9\",\"chunk-3c1e30f4\":\"34c892a3\",\"chunk-2c9f623a\":\"87f699d8\",\"chunk-2d2248b6\":\"31d6cfe0\",\"chunk-55ac22a3\":\"31d6cfe0\",\"chunk-e24ef14a\":\"31d6cfe0\",\"chunk-0b4be6dc\":\"4649345f\",\"chunk-3ecd16db\":\"31d6cfe0\",\"chunk-44dae684\":\"a4ee8428\",\"chunk-47b7c78b\":\"dcb64b41\",\"chunk-4c27b1e5\":\"e817ece4\",\"chunk-4cf1595b\":\"31d6cfe0\",\"chunk-501bd124\":\"a4ee8428\",\"chunk-529f8d9f\":\"a4ee8428\",\"chunk-561eea10\":\"dcb64b41\",\"chunk-5673e349\":\"dcb64b41\",\"chunk-5ad37190\":\"dcb64b41\",\"chunk-5b0c4918\":\"a4ee8428\",\"chunk-5b0e40b4\":\"db04c867\",\"chunk-77518700\":\"31d6cfe0\",\"chunk-ad6681d6\":\"7225641a\",\"chunk-6ca69536\":\"dcb64b41\",\"chunk-73212f64\":\"31d6cfe0\",\"chunk-774ea17e\":\"31d6cfe0\",\"chunk-774f4689\":\"31d6cfe0\",\"chunk-7750ab43\":\"31d6cfe0\",\"chunk-7766b4ea\":\"31d6cfe0\",\"chunk-776718c3\":\"31d6cfe0\",\"chunk-7cf6cb0a\":\"31d6cfe0\",\"chunk-82b24ba2\":\"31d6cfe0\",\"chunk-060fccc8\":\"7c909b22\",\"chunk-119d4da3\":\"dcb64b41\",\"chunk-1cd316f5\":\"4def27bc\",\"chunk-26624bd4\":\"2cb06f05\",\"chunk-2aeb6233\":\"31d6cfe0\",\"chunk-2d0e97b4\":\"31d6cfe0\",\"chunk-58d44302\":\"73628e29\",\"chunk-eb00410c\":\"ac5b10c9\",\"chunk-5a3dbce8\":\"54a1f7cd\",\"chunk-8b9b7d0a\":\"6c913791\",\"chunk-18daba5a\":\"31d6cfe0\",\"chunk-2d21b33b\":\"31d6cfe0\",\"chunk-2ea4a98e\":\"31d6cfe0\",\"chunk-4e1b9991\":\"2cb89086\",\"chunk-4eb6e2e9\":\"d8683cae\",\"chunk-641f7d7a\":\"2cb89086\",\"chunk-98aeed2e\":\"31d6cfe0\",\"chunk-98da2888\":\"31d6cfe0\",\"chunk-98db9b3c\":\"31d6cfe0\",\"chunk-a16c32fe\":\"a4ee8428\",\"chunk-a442f142\":\"31d6cfe0\",\"chunk-b38ccd10\":\"a4ee8428\",\"chunk-bbe9979a\":\"31d6cfe0\",\"chunk-c82442b8\":\"31d6cfe0\",\"chunk-ca5179aa\":\"a4ee8428\",\"chunk-d9f72ee2\":\"a4ee8428\",\"chunk-db381c64\":\"dcb64b41\",\"chunk-df2530de\":\"a4ee8428\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://yahyast.github.io/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors~253ae210\",\"chunk-vendors~2c2bd1ac\",\"chunk-vendors~987e6011\",\"chunk-vendors~1f20a385\",\"chunk-vendors~c19dcf7a\",\"chunk-vendors~690b702c\",\"chunk-vendors~2930ad93\",\"chunk-vendors~9c5b28f6\",\"chunk-vendors~e258e298\",\"chunk-vendors~8eeb4602\",\"chunk-vendors~7db804d5\",\"chunk-vendors~15f0789d\",\"chunk-vendors~cc99a214\",\"chunk-vendors~4b106089\",\"chunk-vendors~678f84af\",\"chunk-vendors~7ec1e70e\",\"chunk-vendors~fdc6512a\",\"chunk-vendors~8d0797fd\",\"chunk-vendors~cf55716b\",\"chunk-vendors~bc9d1275\",\"chunk-vendors~36072048\",\"chunk-vendors~ab08f1e4\",\"chunk-vendors~d2305125\",\"app~d0ae3f07\",\"app~f71cff67\",\"app~73faf69f\",\"app~e2550e02\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import moment from 'moment';\nimport ls from 'local-storage';\nimport SecureLS from 'secure-ls';\n\nconst secureLs = new SecureLS({isCompression: false});\n\nexport default {\n    methods: {\n        arrayToString(data, key = null) {\n            if (key != null) {\n                // objectToArray\n                data = data.map(function(item) {\n                    return item[key];\n                });\n            }\n            try {\n                // return data.join(', ');\n                return data.join(', ').replace(/, ([^,]*)$/, ' dan $1');\n            } catch (error) {\n                return '-';\n            }\n        },\n        splitStr(str, splitter=',') {\n            return str.split(splitter);\n        },\n        capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        },\n        trimmedStr(str, maxLength =450, isHtml=false) {\n            if (isHtml) {\n                str = this.removeTags(str);\n            }\n            if (str.length < maxLength) {\n                return str;\n            } else {\n                // trim the str to the maximum length\n                let trimmedString = str.substr(0, maxLength);\n\n                // re-trim if we are in the middle of a word\n                trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf('.'))) + '.';\n\n                return trimmedString;\n            }\n        },\n        removeTags(str) {\n            if ((str===null) || (str==='')) {\n                return str;\n            } else {\n                str = str.toString();\n            }\n            // Regular expression to identify HTML tags in\n            // the input string. Replacing the identified\n            // HTML tag with a null string.\n            return str.replace( /(<([^>]+)>)/ig, '');\n        },\n        showString(str) {\n            return str?str:'-';\n        },\n        numberWithDot(number) {\n            if ((number===null) || (number==='')) {\n                return number;\n            }\n            const parts = number.toString().split('.');\n            parts[0]=parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n            return parts.join(',');\n        },\n        nFormatter(num, digits = 1) {\n            const lookup = [\n                {value: 1, symbol: ''},\n                {value: 1e3, symbol: 'k'},\n                {value: 1e6, symbol: 'M'},\n                {value: 1e9, symbol: 'G'},\n                {value: 1e12, symbol: 'T'},\n                {value: 1e15, symbol: 'P'},\n                {value: 1e18, symbol: 'E'},\n            ];\n            const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n            const item = lookup.slice().reverse().find(function(item) {\n                return num >= item.value;\n            });\n            return item ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol : '0';\n        },\n        getUsernameSosmed(string) {\n            const isURL = this.isValidHttpUrl(string);\n            let str = string;\n            if (isURL) {\n                str = str.replace(/(^\\w+:|^)\\/\\//, '');\n                str = str.split('/')[1];\n            }\n            return str;\n        },\n        isValidHttpUrl(string) {\n            let url;\n\n            try {\n                url = new URL(string);\n            } catch (_) {\n                return false;\n            }\n\n            return url.protocol === 'http:' || url.protocol === 'https:';\n        },\n        dateFormatPicker(classes, date) {\n            if (!classes.disabled) {\n                classes.disabled = moment(date.getTime()).subtract({hours: 12})._d > new Date();\n            }\n            return classes;\n        },\n        datetimeFormat(datetime, formatFrom='YYYY-MM-DD', formatTo='DD MMMM YYYY') {\n            let dtFormat = datetime;\n            try {\n                // dtFormat = moment(datetime, formatFrom).format(formatTo);\n                dtFormat = moment(datetime, formatFrom).locale('id').format(formatTo);\n            } catch (error) {\n                console.log('error dateformat');\n                console.log(error);\n            }\n            return dtFormat;\n        },\n        encodeDetailData(data) {\n            return encodeURI(btoa(JSON.stringify(data)));\n        },\n        decodeDetailData(data) {\n            return JSON.parse(atob(decodeURI(data)));\n        },\n        decodeBase64(data) {\n            return (atob(data));\n        },\n        getDefaultImage(type='default') {\n            let img = this.$store.getters['config/getDefaultImage'];\n\n            if (type === 'profile') {\n                img = this.$store.getters['config/getDefaultImageProfile'];\n            }\n            return img;\n        },\n        getErrorImage(e, type='default') {\n            let img = this.$store.getters['config/getDefaultImage'];\n\n            if (type === 'profile') {\n                img = this.$store.getters['config/getDefaultImageProfile'];\n            }\n\n            e.target.src = img;\n        },\n\n        // get & listen local storage changes\n        ls_getData() {\n            // return ls.get('vuex');\n            return JSON.parse(secureLs.get('vuex'));\n        },\n        ls_attachListener(callback) {\n            ls.on('vuex', callback);\n        },\n\n        getOsmDarkModeAccessToken() {\n            let access_token = 'pcfhg8us5vcMhZJQEfY6YDU8ipIQ2DqNoqYBP858Tfkhpm4ARsisRcxyW4kqMU5R';\n\n            if (process.env.VUE_APP_OSM_DARK_MODE_ACCESS_TOKEN) {\n                access_token = process.env.VUE_APP_OSM_DARK_MODE_ACCESS_TOKEN;\n            }\n\n            return access_token;\n        },\n    },\n    filters: {\n        date: function(date, locale='id', format='DD MMM YYYY') {\n            return moment(date).locale(locale).format(format);\n        },\n    },\n};\n","import axios from \"@/axios-main\";\nimport axiosOrigin from \"axios\";\n\nlet cancelList;\nvar cancelToken = axiosOrigin.CancelToken;\n\nconst cases = {\n  namespaced: true,\n  state: {\n    // load data case\n    status_list: {\n      status: false,\n      cancel: null,\n      code: null,\n    },\n    status_detail: false,\n\n    // case\n    list: {},\n    detail: {},\n  },\n  mutations: {\n    // load data case\n    setStatusList: (state, status) => {\n      state.status_list = status;\n    },\n    setStatusDetail: (state, status) => {\n      state.status_detail = status;\n    },\n\n    // case\n    setList: (state, data) => {\n      state.list = data;\n    },\n    setDetail: (state, data) => {\n      state.detail = data;\n    },\n  },\n  getters: {},\n  actions: {\n    async getList({ state, commit, dispatch }, [limit='', page='', keyword='']) {\n\n      if (state.status_list.cancel !== null && state.status_list.status === 'loading')\n        await state.status_list.cancel('Operation canceled by the user.');\n\n      let params = {\n        limit: limit,\n        page: page,\n        keyword: keyword,\n      };\n    \n      await axios.get('case/fetch', {\n        params: params,\n        cancelToken: new cancelToken(function executor(c) {\n          cancelList = c;\n          commit('setStatusList', {\n            status: 'loading',\n            cancel: c,\n            code: null,\n          });\n        }),\n      })\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        let result = {\n          status: true,\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        commit('setList', data);\n\n        if (Object.keys(data).length===0)\n          result.status = 'empty';\n\n        commit('setStatusList', result);\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        if (axiosOrigin.isCancel(resp)) {\n          result.status = 'loading';\n          result.cancel = cancelList;\n        }\n\n        commit('setStatusList', result);\n        if (!axiosOrigin.isCancel(resp))\n        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], { root: true });\n      });\n    },\n\n    getDetail({ commit, dispatch }, id) {\n\n      // let params = new FormData();\n      // params.append('id', id);\n    \n      // return axios.post('case/detail/', params)\n      return axios.get('case/detail/'+id,)\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        commit('setDetail', data);\n        return 'success';\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return 'failed';\n      });\n    },\n\n    // create({ commit, dispatch }, [name='', label='', status='', description='']) {\n    create({ commit, dispatch, rootState }, [name='', gatra='', start_date='', end_date='', description='']) {\n\n      let params = new FormData();\n      params.append('name', name);\n      params.append('gatra', gatra);\n      // params.append('start_date', start_date);\n      // params.append('end_date', end_date);\n      params.append('description', description);\n      \n      params.append('created_by', rootState.auth.profile.name);\n      params.append('updated_by', rootState.auth.profile.name);\n\n      return axios.post('case/create', params)\n      .then((resp) => {\n\n        // if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n        if (resp.status === 200) {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    // update({ commit, dispatch }, [id, name='', label='', status='', description='']) {\n    update({ commit, dispatch, rootState }, [id, name='', gatra='', start_date='', end_date='', description='']) {\n\n      let params = new FormData();\n      // params.append('id', id);\n      params.append('name', name);\n      params.append('gatra', gatra);\n      // params.append('start_date', start_date);\n      // params.append('end_date', end_date);\n      params.append('description', description);\n      \n      params.append('updated_by', rootState.auth.profile.name);\n    \n      return axios.put('case/update/'+id, params)\n      .then((resp) => {\n        // console.log(resp.data)\n        \n        // if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n        if (resp.status === 200) {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    delete({ commit, dispatch }, id) {\n\n      return axios.delete('case/delete/'+id)\n      .then((resp) => {\n        // console.log(resp)\n        \n        // if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n        if (resp.status === 200) {\n          return 'success';\n        } else {\n          return 'failed';\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n\n    },\n  }\n};\n\nexport default cases;\n","import axios from \"@/axios-main\";\nimport axiosOrigin from \"axios\";\n\nlet cancelList;\nvar cancelToken = axiosOrigin.CancelToken;\n\nconst roles = {\n  namespaced: true,\n  state: {\n    // load data roles\n    status_list: {\n      status: false,\n      cancel: null,\n      code: null,\n    },\n    status_detail: false,\n\n    // roles\n    list: {},\n    detail: {},\n  },\n  mutations: {\n    // load data roles\n    setStatusList: (state, status) => {\n      state.status_list = status;\n    },\n    setStatusDetail: (state, status) => {\n      state.status_detail = status;\n    },\n\n    // roles\n    setList: (state, data) => {\n      state.list = data;\n    },\n    setDetail: (state, data) => {\n      state.detail = data;\n    },\n  },\n  getters: {},\n  actions: {\n    async getList({ state, commit, dispatch }, [limit='', page='', keyword='']) {\n\n      if (state.status_list.cancel !== null && state.status_list.status === 'loading')\n        await state.status_list.cancel('Operation canceled by the user.');\n\n      let params = {\n        limit: limit,\n        page: page,\n        keyword: keyword,\n      };\n    \n      await axios.get('bff/roles', {\n        params: params,\n        cancelToken: new cancelToken(function executor(c) {\n          cancelList = c;\n          commit('setStatusList', {\n            status: 'loading',\n            cancel: c,\n            code: null,\n          });\n        }),\n      })\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        let result = {\n          status: true,\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        commit('setList', data);\n\n        if (Object.keys(data).length===0)\n          result.status = 'empty';\n\n        commit('setStatusList', result);\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        if (axiosOrigin.isCancel(resp)) {\n          result.status = 'loading';\n          result.cancel = cancelList;\n        }\n\n        commit('setStatusList', result);\n        if (!axiosOrigin.isCancel(resp))\n        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], { root: true });\n      });\n    },\n\n    getDetail({ commit, dispatch }, id) {\n\n      return axios.get('bff/roles/detail/'+id)\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        commit('setDetail', data);\n        return 'success';\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return 'failed';\n      });\n    },\n\n    // create({ commit, dispatch }, [name='', label='', status='', description='']) {\n    create({ commit, dispatch }, [name='', label='', description='']) {\n\n      let params = new FormData();\n      params.append('name', name);\n      params.append('label', label);\n      // params.append('status', status);\n      params.append('description', description);\n\n      return axios.post('bff/roles/store', params)\n      .then((resp) => {\n\n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    // update({ commit, dispatch }, [id, name='', label='', status='', description='']) {\n    update({ commit, dispatch }, [id, name='', label='', description='']) {\n\n      let params = new FormData();\n      params.append('id', id);\n      params.append('name', name);\n      params.append('label', label);\n      // params.append('status', status);\n      params.append('description', description);\n    \n      return axios.post('bff/roles/edit', params)\n      .then((resp) => {\n        // console.log(resp.data)\n        \n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    delete({ commit, dispatch }, id) {\n\n      // let params = new FormData();\n      // params.append('id', id);\n\n      // return axios.post('bff/roles/destroy/'+id, params)\n      return axios.post('bff/roles/destroy/'+id)\n      .then((resp) => {\n        // console.log(resp)\n        \n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return 'success';\n        } else {\n          return 'failed';\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n\n    },\n  }\n};\n\nexport default roles;\n","import axios from \"@/axios-main\";\nimport axiosOrigin from \"axios\";\n\nlet cancelList, cancelLogActivity, cancelTacticalList;\nvar cancelToken = axiosOrigin.CancelToken;\n\nconst users = {\n  namespaced: true,\n  state: {\n    // load data users\n    status_list: {\n      status: false,\n      cancel: null,\n      code: null,\n    },\n    status_detail: false,\n    // status_log_activity: {\n    //   status: false,\n    //   cancel: null,\n    //   code: null,\n    // },\n    // status_log_activity_chart: false,\n\n    // load data users tactical\n    // status_tactical_list: {\n    //   status: false,\n    //   cancel: null,\n    //   code: null,\n    // },\n\n    // users\n    list: {},\n    detail: {},\n    // log_activity: {},\n    // log_activity_chart: {},\n\n    // users tactical\n    // tactical_list: {},\n  },\n  mutations: {\n    // load data users\n    setStatusList: (state, status) => {\n      state.status_list = status;\n    },\n    setStatusDetail: (state, status) => {\n      state.status_detail = status;\n    },\n    // setStatusLogActivity: (state, status) => {\n    //   state.status_log_activity = status;\n    // },\n    \n    // setStatusLogActivityChart: (state, status) => {\n    //   state.status_log_activity_chart = status;\n    // },\n\n    // load data users tactical\n    // setStatusTacticalList: (state, status) => {\n    //   state.status_tactical_list = status;\n    // },\n\n    // users\n    setList: (state, data) => {\n      state.list = data;\n    },\n    setDetail: (state, data) => {\n      state.detail = data;\n    },\n    // setLogActivity: (state, data) => {\n    //   state.log_activity = data;\n    // },\n    // setLogActivityChart: (state, data) => {\n    //   state.log_activity_chart = data;\n    // },\n\n    // // users tactical\n    // setTacticalList: (state, data) => {\n    //   state.tactical_list = data;\n    // },\n  },\n  getters: {},\n  actions: {\n    async getList({ state, commit, dispatch }, [limit='', page='', role_id=\"\", keyword='']) {\n\n      if (state.status_list.cancel !== null && state.status_list.status === 'loading')\n        await state.status_list.cancel('Operation canceled by the user.');\n\n      let params = {\n        limit: limit,\n        page: page,\n        role_id: role_id,\n        // keyword: keyword,\n        search: keyword,\n        dir: 'desc',\n      };\n    \n      axios.get('bff/auth/user/fetch', {\n        params: params,\n        cancelToken: new cancelToken(function executor(c) {\n          cancelList = c;\n          commit('setStatusList', {\n            status: 'loading',\n            cancel: c,\n            code: null,\n          });\n        }),\n      })\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        let result = {\n          status: true,\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        commit('setList', data);\n\n        if (Object.keys(data).length===0)\n          result.status = 'empty';\n            \n        commit('setStatusList', result);\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        if (axiosOrigin.isCancel(resp)) {\n          result.status = 'loading';\n          result.cancel = cancelList;\n        }\n\n        commit('setStatusList', result);\n        if (!axiosOrigin.isCancel(resp))\n        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], { root: true });\n      });\n    },\n\n    getDetail({ commit, dispatch }, id) {\n\n      return axios.get('bff/auth/user/detail/'+id)\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        commit('setDetail', data);\n        return 'success';\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return 'failed';\n      });\n    },\n\n    create({ commit, dispatch }, [name='', username='', email='', role_id='', assign_to_case='', upline_id='', password='', repeat_password='']) {\n\n      let params = new FormData();\n      params.append('name', name);\n      params.append('username', username);\n      params.append('email', email);\n      params.append('role_id', role_id);\n      params.append('assign_to_case', assign_to_case);\n      params.append('upline_id', upline_id);\n      // params.append('status', status);\n      params.append('password', password);\n      params.append('repeat_password', repeat_password);\n\n      return axios.post('bff/auth/user', params)\n      .then((resp) => {\n\n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    update({ commit, dispatch }, [id, name='', username='', email='', role_id='', assign_to_case='', upline_id='', password='', repeat_password='']) {\n\n      let params = new FormData();\n      params.append('id', id);\n      params.append('name', name);\n      params.append('username', username);\n      params.append('email', email);\n      params.append('role_id', role_id);\n      params.append('assign_to_case', assign_to_case);\n      params.append('upline_id', upline_id);\n      // params.append('status', status);\n      params.append('password', password);\n      params.append('repeat_password', repeat_password);\n\n      // let params = {\n      //   id: id,\n      //   name: name,\n      //   username: username,\n      //   email: email,\n      //   // status: status,\n      //   role_id: role_id,\n      //   password: password,\n      //   repeat_password: repeat_password,\n      // };\n    \n      return axios.put('bff/auth/user', params)\n      .then((resp) => {\n        // console.log(resp.data)\n        \n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    delete({ commit, dispatch }, id) {\n\n      // let params = new FormData();\n      // params.append('id', id);\n\n      // return axios.post('api/v1/user/delete', params)\n      return axios.delete('bff/auth/user/'+id)\n      .then((resp) => {\n        // console.log(resp)\n        \n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return 'success';\n        } else {\n          return 'failed';\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n\n    },\n  }\n};\n\nexport default users;\n","/* eslint-disable max-len */\nimport { axiosNtx, axiosNtxMock } from '@/axios-main';\nimport axiosOrigin from 'axios';\nimport moment from 'moment';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListGatra, cancelSearchEvent, cancelDetailEvent, cancelDetailEventIan, cancelDetailEventReport, cancelDynamicsNationalThreats;\n\nconst graph = {\n    namespaced: true,\n    state: {\n        status_list_gatra: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_search_event: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail_event: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail_event_ian: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail_event_report: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_dynamics_national_threats: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_gatra: [],\n        search_event: [],\n        detail_event: {},\n        detail_event_ian: [],\n        detail_event_report: [],\n        dynamics_national_threats: [],\n    },\n    mutations: {\n        setStatusListGatra: (state, status) => {\n            state.status_list_gatra = status;\n        },\n        setStatusSearchEvent: (state, status) => {\n            state.status_search_event = status;\n        },\n        setStatusDetailEvent: (state, status) => {\n            state.status_detail_event = status;\n        },\n        setStatusDetailEventIan: (state, status) => {\n            state.status_detail_event_ian = status;\n        },\n        setStatusDetailEventReport: (state, status) => {\n            state.status_detail_event_report = status;\n        },\n        setStatusDynamicsNationalThreats: (state, status) => {\n            state.status_dynamics_national_threats = status;\n        },\n\n        setListGatra: (state, data) => {\n            state.list_gatra = data;\n        },\n        setSearchEvent: (state, data) => {\n            state.search_event = data;\n        },\n        setDetailEvent: (state, data) => {\n            state.detail_event = data;\n        },\n        setDetailEventIan: (state, data) => {\n            state.detail_event_ian = data;\n        },\n        setDetailEventReport: (state, data) => {\n            state.detail_event_report = data;\n        },\n        setDynamicsNationalThreats: (state, data) => {\n            state.dynamics_national_threats = data;\n        },\n    },\n    getters: {},\n    actions: {\n    // async getListGatra({ state, commit, dispatch }, [limit='', page='', keyword='']) {\n        async getListGatra({state, commit, dispatch}) {\n            if (state.status_list_gatra.cancel !== null && state.status_list_gatra.status === 'loading') {\n                await state.status_list_gatra.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                // limit: limit,\n                // page: page,\n                // keyword: keyword,\n                // order_by: order_by,\n                // from_date: from_date,\n                // to_date: to_date,\n            };\n\n            // await axiosNtx.get('api/mock/gatra', {\n            await axiosNtx.get('gatra', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListGatra = c;\n                    commit('setStatusListGatra', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListGatra', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListGatra', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListGatra;\n                    }\n\n                    commit('setStatusListGatra', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        // async getSearchEvent({state, commit, dispatch}, [gatra='', query='', source='BERITA|LAPORAN', date_from='', date_to='']) {\n        async getSearchEvent({state, commit, dispatch}, [gatra='', query='', source='berita,laporan', date_from='', date_to='']) {\n            if (state.status_search_event.cancel !== null && state.status_search_event.status === 'loading') {\n                await state.status_search_event.cancel('Operation canceled by the user.');\n            }\n\n            let params = {\n                // gatra: 'politik,ideologi,hankam,ekonomi,sosbud,misc',\n                gatra: gatra,\n                query: query,\n                source: source,\n                // date_from: (date_from !== '' ? date_from : moment().subtract(2, 'years').format('YYYY-MM-DD')),\n                date_from: (date_from !== '' ? date_from : moment().subtract(2, 'months').format('YYYY-MM-DD')),\n                date_to: (date_to !== '' ? date_to : moment().format('YYYY-MM-DD')),\n            };\n\n            // await axiosNtx.get('api/mock/event', {\n            await axiosNtx.get('event', {\n            // await axiosNtxMock.get('event', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelSearchEvent = c;\n                    commit('setStatusSearchEvent', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setSearchEvent', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusSearchEvent', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelSearchEvent;\n                    }\n\n                    commit('setStatusSearchEvent', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getDetailEvent({state, commit, dispatch}, id) {\n            if (state.status_detail_event.cancel !== null && state.status_detail_event.status === 'loading') {\n                await state.status_detail_event.cancel('Operation canceled by the user.');\n            }\n\n            // let params = new FormData();\n            // params.append('id', id);\n\n            const params = {\n                //   id: id,\n            };\n\n            // await axiosNtx.get('/api/mock/event/'+ id, {\n            await axiosNtx.get('event/'+ id, {\n            // await axiosNtxMock.get('event/'+ id, {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelDetailEvent = c;\n                    commit('setStatusDetailEvent', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setDetailEvent', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusDetailEvent', result);\n\n                    // return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelDetailEvent;\n                    }\n\n                    commit('setStatusDetailEvent', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getDetailEventIan({state, commit, dispatch}, [id, date_from='', date_to='']) {\n            if (state.status_detail_event_ian.cancel !== null && state.status_detail_event_ian.status === 'loading') {\n                await state.status_detail_event_ian.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                  location_id: id,\n                  date_from: (date_from !== '' ? date_from : moment().subtract(1, 'months').format('YYYY-MM-DD')),\n                  date_to: (date_to !== '' ? date_to : moment().format('YYYY-MM-DD')),\n                  group_by: 'date',\n            };\n\n            // await axiosNtx.get('/api/mock/dinamika', {\n            await axiosNtx.get('dinamika', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelDetailEventIan = c;\n                    commit('setStatusDetailEventIan', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setDetailEventIan', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusDetailEventIan', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelDetailEventIan;\n                    }\n\n                    commit('setStatusDetailEventIan', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getDetailEventReport({state, commit, dispatch}, id) {\n            if (state.status_detail_event_report.cancel !== null && state.status_detail_event_report.status === 'loading') {\n                await state.status_detail_event_report.cancel('Operation canceled by the user.');\n            }\n\n            // const params = {\n            //       location_id: id,\n            // };\n\n            // await axiosNtx.get('/api/mock/event/'+ id +'/similar-event', {\n            await axiosNtx.get('event/'+ id +'/similar-event', {\n                // params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelDetailEventReport = c;\n                    commit('setStatusDetailEventReport', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setDetailEventReport', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusDetailEventReport', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelDetailEventReport;\n                    }\n\n                    commit('setStatusDetailEventReport', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getDynamicsNationalThreats({state, commit, dispatch}, [date_from, date_to, group_by='date']) {\n            if (state.status_dynamics_national_threats.cancel !== null && state.status_dynamics_national_threats.status === 'loading') {\n                await state.status_dynamics_national_threats.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                  // location_id: id,\n                  date_from: date_from,\n                  date_to: date_to,\n                  group_by: group_by,\n            };\n\n            // await axiosNtx.get('/api/mock/dinamika', {\n            await axiosNtx.get('dinamika', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelDynamicsNationalThreats = c;\n                    commit('setStatusDynamicsNationalThreats', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setDynamicsNationalThreats', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusDynamicsNationalThreats', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelDynamicsNationalThreats;\n                    }\n\n                    commit('setStatusDynamicsNationalThreats', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n    },\n};\n\nexport default graph;\n","import {axiosGraphql} from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListTopics;\n\nconst topics = {\n    namespaced: true,\n    state: {\n        status_list_topics: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_topics: [],\n        detail_topic: {},\n    },\n    mutations: {\n        setStatusListTopics: (state, status) => {\n            state.status_list_topics = status;\n        },\n\n        setListTopics: (state, data) => {\n            state.list_topics = data;\n        },\n        setDetailTopic: (state, data) => {\n            state.detail_topic = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListTopics({state, commit, dispatch}) {\n            if (state.status_list_topics.cancel !== null && state.status_list_topics.status === 'loading') {\n                await state.status_list_topics.cancel('Operation canceled by the user.');\n            }\n\n            // let params = {\n            // limit: limit,\n            // page: page,\n            // keyword: keyword,\n            // order_by: order_by,\n            // from_date: from_date,\n            // to_date: to_date,\n            // };\n\n            // let params = new FormData();\n            // params.append('ehe', 'ehe');\n\n            await axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `query { \n                    topics {\n                        id\n                        name\n                        status\n                        created_by\n                        updated_by\n                    }\n                }`,\n            }, {\n                // params: params,\n                // data: params,\n                // headers: {\n                //   'x-custom': 'ehe'\n                // },\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListTopics = c;\n                    commit('setStatusListTopics', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.topics;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // console.log(data)\n                    commit('setListTopics', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListTopics', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListTopics;\n                    }\n\n                    commit('setStatusListTopics', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async create({commit, dispatch, rootState}, data) {\n            data.status = true;\n            data.created_by = rootState.auth.profile.name;\n            data.updated_by = rootState.auth.profile.name;\n\n            // let params = new FormData();\n            // params.append('name', name);\n            // params.append('label', label);\n            // params.append('status', status);\n            // params.append('description', description);\n\n            return axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `mutation ($topic: TopicInput) { \n                    createTopic(topic: $topic) {\n                        id\n                        name\n                        status\n                        created_by\n                        updated_by\n                    }\n                }`,\n                // variables: data,\n                variables: {\n                    topic: data,\n                },\n            })\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.createTopic && Object.keys(resp.data.data.createTopic).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.createTopic};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n        async update({commit, dispatch, rootState}, [id, data]) {\n            // data.updated_by = rootState.auth.profile.name;\n\n            // let params = new FormData();\n            // params.append('name', name);\n            // params.append('label', label);\n            // params.append('status', status);\n            // params.append('description', description);\n\n            return axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `mutation ($id: ID, $topic: TopicInput) { \n                    updateTopic(id: $id, topic: $topic) {\n                        id\n                        name\n                        status\n                        created_by\n                        updated_by\n                    }\n                }`,\n                // variables: data,\n                variables: {\n                    id: id,\n                    topic: data,\n                },\n            })\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.updateTopic && Object.keys(resp.data.data.updateTopic).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.updateTopic};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n        // getDetail({ commit, dispatch }, id) {\n\n        //   let params = new FormData();\n        //   params.append('id', id);\n\n    //   return axios.post('api/v1/role', params)\n    //   .then((resp) => {\n    //     // console.log(resp.data)\n    //     let data = resp.data;\n    //     commit('setDetail', data);\n    //     return 'success';\n    //   })\n    //   .catch((resp) => {\n    //     // console.log(resp)\n    //     dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n    //     return 'failed';\n    //   });\n    // },\n    },\n};\n\nexport default topics;\n","import axios from '@/axios-main';\nimport {axiosGraphql, axiosNtx} from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListOrganization;\nlet cancelSearchOrganization;\nlet cancelListLogHistory;\nlet cancelIanOrganization;\nlet cancelRelatedOrganizations;\nlet cancelMotiveAgenda;\n\nconst organization = {\n    namespaced: true,\n    state: {\n        status_list_organization: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_search_organization: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail: false,\n        status_list_log_history: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_ian_organization: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_related_organizations: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_motive_agenda: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_organization: [],\n        search_organization: [],\n        detail: {},\n        list_log_history: {},\n        ian_organization: {},\n        related_organizations: {},\n        motive_agenda: {},\n    },\n    mutations: {\n        setStatusListOrganization: (state, status) => {\n            state.status_list_organization = status;\n        },\n        setStatusSearchOrganization: (state, status) => {\n            state.status_search_organization = status;\n        },\n        setStatusDetail: (state, status) => {\n            state.status_detail = status;\n        },\n        setStatusListLogHistory: (state, status) => {\n            state.status_list_log_history = status;\n        },\n        setStatusIanOrganization: (state, status) => {\n            state.status_ian_organization = status;\n        },\n        setStatusRelatedOrganizations: (state, status) => {\n            state.status_related_organizations = status;\n        },\n        setStatusMotiveAgenda: (state, status) => {\n            state.status_motive_agenda = status;\n        },\n\n\n        setListOrganization: (state, data) => {\n            state.list_organization = data;\n        },\n        setSearchOrganization: (state, data) => {\n            state.search_organization = data;\n        },\n        setDetail: (state, data) => {\n            state.detail = data;\n        },\n        setListLogHistory: (state, data) => {\n            state.list_log_history = data;\n        },\n\n        setIanOrganization: (state, data) => {\n            state.ian_organization = data;\n        },\n        setRelatedOrganizations: (state, data) => {\n            state.related_organizations = data;\n        },\n        setMotiveAgenda: (state, data) => {\n            state.motive_agenda = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListOrganization({state, commit, dispatch}, [limit=9, page=1, keyword='', orderShort='']) {\n            if (state.status_list_organization.cancel !== null && state.status_list_organization.status === 'loading') {\n                await state.status_list_organization.cancel('Operation canceled by the user.');\n            }\n\n            // limit: limit,\n            // page: page,\n            // keyword: keyword,\n            // order_by: order_by,\n            // from_date: from_date,\n            // to_date: to_date,\n\n            // let params = {\n            //   ehe: 'ehe'\n            // };\n\n            // let params = new FormData();\n            // params.append('ehe', 'ehe');\n\n            // params.append('query', `query {\n            //     getOrganization {\n            //       id\n            //       name\n            //       photo\n            //       profile\n            //       related_figure\n            //       related_organization\n            //       structure\n            //     }\n            //   }`);\n\n            // console.log(params)\n\n            await axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `query { \n                    getOrganization (keyword: \"`+ keyword +`\", limit: `+ limit +`, orderShort: \"`+ orderShort +`\", page: `+ page +`) {\n                        doc {\n                            id\n                            name\n                            photo\n                        }\n                        pagination {\n                            perPage\n                            total\n                            totalPage\n                            prevPage\n                            hasPrev\n                            nextPage\n                            hasNext\n                        }\n                    }\n                }`,\n            }, {\n                // params: params,\n                // data: params,\n                // headers: {\n                //   'x-custom': 'ehe'\n                // },\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListOrganization = c;\n                    commit('setStatusListOrganization', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.getOrganization;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListOrganization', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListOrganization', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListOrganization;\n                    }\n\n                    commit('setStatusListOrganization', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        getDetail({commit, dispatch}, id) {\n            commit('setStatusDetail', 'loading');\n\n            return axiosGraphql.post(null, {\n                query: `query ($id: ID) { \n                    detailOrganization(id: $id) {\n                        created_by\n                        figures {\n                            figure {\n                                id\n                                name\n                                photo\n                                position {\n                                data\n                                }\n                            }\n                        }\n                        id\n                        name\n                        organization_activity {\n                            activity_date\n                            notes\n                        }\n                        photo\n                        profile\n                        related_figure\n                        related_organization\n                        social_media {\n                            media_type\n                            username\n                        }\n                        structure {\n                            figure_id\n                            figure\n                            position\n                        }\n                        updated_at\n                        updated_by\n                    }\n                    }`,\n                variables: {\n                    id: id,\n                },\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data.detailOrganization;\n                    commit('setStatusDetail', true);\n                    commit('setDetail', data);\n                    return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    // dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n\n                    const result = {\n                        // status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        // data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n                    commit('setStatusDetail', 'failed');\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n                    return 'failed';\n                });\n        },\n\n        // async create({ commit, dispatch, rootState }, [data, photo=null]) {\n        async create({commit, dispatch, rootState}, data) {\n            data.created_by = rootState.auth.profile.name;\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n\n            for (const index in data) {\n                if (index === 'photo') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            return axios.post('organization/create', params)\n            .then((resp) => {\n                // console.log(resp);\n                if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                    // if (resp.status === 200) {\n                    return {result: 'success', data: resp.data.data};\n                } else {\n                    return {result: 'failed', data: resp.data};\n                }\n            })\n            .catch((resp) => {\n                // console.log(resp)\n                const result = {\n                    status: 'failed',\n                    code: (resp.response && resp.response.status ? resp.response.status : null),\n                    message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                    data: (resp.response && resp.response.data ? resp.response.data : null),\n                };\n\n                dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                return {\n                    result: result.status,\n                    data: result.data,\n                };\n            });\n\n            // ====== graphql ======\n\n            // let operation = {\n            //   query: `mutation ($organization: OrganizationInput, $photo: Upload) {\n            //     createOrganization(organization: $organization, photo: $photo) {\n            //       name\n            //       photo\n            //       profile\n            //       created_by\n            //       updated_by\n            //     }\n            //   }`,\n            //   variables: {\n            //     organization: data,\n            //     // photo: null\n            //     photo: photo\n            //   },\n            // };\n\n            // if (photo !== null) {\n            //   let map = {\n            //     \"0\": [\"variables.photo\"]\n            //   };\n\n            //   // const concat = require(\"concat-stream\")\n\n            //   // let fd = new FormData()\n            //   let o = operation;\n            //   operation = new FormData();\n            //   operation.append('operations', JSON.stringify(o));\n            //   operation.append('map', JSON.stringify(map));\n            //   operation.append('0', photo);\n\n            //   // var fs = require('fs');\n            //   // const fs = require('fs');\n\n            //   // operation.append(0, fs.createReadStream(photo));\n\n            //   console.log(operation)\n            // }\n\n            // // return axiosGraphql.post(null, operation, {\n            // return axiosGraphql.post('', operation, {\n            //   headers: {\n            //     'Content-Type': 'application/json',\n            //   }\n            // })\n            // .then((resp) => {\n            //   // console.log(resp);\n            //   if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.createOrganization && Object.keys(resp.data.data.createOrganization).length > 0) {\n            //   // if (resp.status === 200) {\n            //     return {result: 'success', data: resp.data.data.createOrganization};\n            //   } else {\n            //     return {result: 'failed', data: resp.data};\n            //   }\n            // })\n            // .catch((resp) => {\n            //   // console.log(resp)\n            //   let result = {\n            //     status: 'failed',\n            //     code: (resp.response && resp.response.status ? resp.response.status : null),\n            //     message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n            //     data: (resp.response && resp.response.data ? resp.response.data : null),\n            //   };\n\n            //   dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n            //   return {\n            //     result: result.status,\n            //     data: result.data,\n            //   };\n            // });\n        },\n\n        async update({commit, dispatch, rootState}, [id, data, form_type]) {\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n            params.append('id', id);\n\n            for (const index in data) {\n                if (index === 'photo') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            return axios.post('organization/update', params)\n            .then((resp) => {\n                // console.log(resp);\n                if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                    // if (resp.status === 200) {\n                    return {result: 'success', data: resp.data.data};\n                } else {\n                    return {result: 'failed', data: resp.data};\n                }\n            })\n            .catch((resp) => {\n                // console.log(resp)\n                const result = {\n                    status: 'failed',\n                    code: (resp.response && resp.response.status ? resp.response.status : null),\n                    message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                    data: (resp.response && resp.response.data ? resp.response.data : null),\n                };\n\n                dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                return {\n                    result: result.status,\n                    data: result.data,\n                };\n            });\n\n            // ====== graphql ======\n\n            // let query = `mutation ($id: ID, $organization: OrganizationInput, $photo: Upload) {\n            //       updateOrganization(id: $id, organization: $organization, photo: $photo) {\n            //         created_by\n            //         updated_by`;\n\n            // switch (form_type) {\n            //   case 'profile':\n            //     query += `\n            //       name\n            //       photo\n            //       profile`;\n            //     break;\n\n            //   case 'related_figure':\n            //     query += `\n            //       figures {\n            //         figure {\n            //           id\n            //           name\n            //           photo\n            //         }\n            //       }\n            //       related_figure`;\n            //     break;\n\n            //   case 'structure':\n            //     query += `\n            //       structure {\n            //         figure\n            //         figure_id\n            //         position\n            //       }`;\n            //     break;\n\n            //   default:\n            //     // code block\n            // };\n            // query += `}}`;\n\n            // return axiosGraphql.post(null, {\n            //   // params: params,\n            //   // data: params,\n\n            //   query: query,\n            //   variables: {\n            //     id: id,\n            //     organization: data,\n            //     photo: null\n            //   },\n            // })\n            // .then((resp) => {\n            //   // console.log(resp);\n            //   if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.updateOrganization && Object.keys(resp.data.data.updateOrganization).length > 0) {\n            //   // if (resp.status === 200) {\n            //     return {result: 'success', data: resp.data.data.updateOrganization};\n            //   } else {\n            //     return {result: 'failed', data: resp.data};\n            //   }\n            // })\n            // .catch((resp) => {\n            //   // console.log(resp)\n            //   let result = {\n            //     status: 'failed',\n            //     code: (resp.response && resp.response.status ? resp.response.status : null),\n            //     message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n            //     data: (resp.response && resp.response.data ? resp.response.data : null),\n            //   };\n\n            //   dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n            //   return {\n            //     result: result.status,\n            //     data: result.data,\n            //   };\n            // });\n        },\n\n        async getListLogHIstory({state, commit, dispatch}, [limit=10, page=1, id='']) {\n            if (state.status_list_log_history.cancel !== null && state.status_list_log_history.status === 'loading') {\n                await state.status_list_log_history.cancel('Operation canceled by the user.');\n            }\n\n            await axiosGraphql.post(null, {\n                query: `query { \n                    getHistories (itemName: \"organizations\", itemId: \"`+ id +`\", limit: `+ limit +`, page: `+ page +`) {\n                        histories {\n                            id\n                            itemId\n                            itemName\n                            user\n                            changes\n                            createdAt\n                            updatedAt\n                        }\n                        paginator {\n                            currentPage\n                            hasNextPage\n                            hasPrevPage\n                            itemCount\n                            next\n                            pageCount\n                            perPage\n                            prev\n                        }\n                    }\n                }`,\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListLogHistory = c;\n                    commit('setStatusListLogHistory', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.getHistories;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListLogHistory', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListLogHistory', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListLogHistory;\n                    }\n\n                    commit('setStatusListLogHistory', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getIanOrganization({state, commit, dispatch}, [name]) {\n            if (state.status_ian_organization.cancel !== null && state.status_ian_organization.status === 'loading') {\n                await state.status_ian_organization.cancel('Operation canceled by the user.');\n            }\n\n            // let params = new FormData();\n            // params.append('id', id);\n\n            const params = {\n                //   id: id,\n            };\n\n            // await axiosNtx.get('/api/mock/entity/UNK/ian?query='+name+'&entity-class=ORG', {\n            await axiosNtx.get('entity/UNKNOWN/ian?query='+name+'&entity-class=ORG', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelIanOrganization = c;\n                    commit('setStatusIanOrganization', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setIanOrganization', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusIanOrganization', result);\n\n                    // return 'success';\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelIanOrganization;\n                    }\n\n                    commit('setStatusIanOrganization', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n        async cancelSearchOrganization({state}) {\n            if (state.status_search_organization.cancel !== null && state.status_search_organization.status === 'loading') {\n                await state.status_search_organization.cancel('Operation canceled by the user.');\n            }\n        },\n\n        async getSearchOrganization({state, commit, dispatch}, [limit=30, page=1, keyword='', orderShort='']) {\n            // if (state.status_search_organization.cancel !== null && state.status_search_organization.status === 'loading')\n            //   await state.status_search_organization.cancel('Operation canceled by the user.');\n\n            await dispatch('cancelSearchOrganization');\n\n            // await axiosGraphql.post(null, {\n            //     query: `query {\n            //         searchOrganization (keyword: \"`+ keyword +`\", limit: `+ limit +`, orderShort: \"`+ orderShort +`\", page: `+ page +`) {\n            //             doc {\n            //                 id\n            //                 name\n            //                 photo\n            //             }\n            //         }\n            //     }`,\n            // }, {\n            await axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `query { \n                    getOrganization (keyword: \"`+ keyword +`\", limit: `+ limit +`, orderShort: \"`+ orderShort +`\", page: `+ page +`) {\n                        doc {\n                            id\n                            name\n                            photo\n                        }\n                        pagination {\n                            perPage\n                            total\n                            totalPage\n                            prevPage\n                            hasPrev\n                            nextPage\n                            hasNext\n                        }\n                    }\n                }`,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelSearchOrganization = c;\n                    commit('setStatusSearchOrganization', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    // const data = resp.data.data.searchOrganization.doc;\n                    const data = resp.data.data.getOrganization.doc;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // commit('setListOrganization', data);\n                    commit('setSearchOrganization', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusSearchOrganization', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelSearchOrganization;\n                    }\n\n                    commit('setStatusSearchOrganization', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n        async getRelatedOrganizations({state, commit, dispatch}, [name]) {\n            if (state.status_related_organizations.cancel !== null && state.status_related_organizations.status === 'loading') {\n                await state.status_related_organizations.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                //   id: id,\n            };\n\n            // await axiosNtx.get('/api/mock/entity/UNK/network?query='+name+'&entity-class=ORG', {\n            await axiosNtx.get('entity/UNKNOWN/network?query='+name+'&entity-class=ORG', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelRelatedOrganizations = c;\n                    commit('setStatusRelatedOrganizations', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setRelatedOrganizations', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusRelatedOrganizations', result);\n\n                    // return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelRelatedOrganizations;\n                    }\n\n                    commit('setStatusRelatedOrganizations', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getMotiveAgenda({state, commit, dispatch}) {\n            if (state.status_motive_agenda.cancel !== null && state.status_motive_agenda.status === 'loading') {\n                await state.status_motive_agenda.cancel('Operation canceled by the user.');\n            }\n\n            const id = 'UNKNOWN';\n            const params = {\n                // id: 'UNKNOWN',\n                'query': (state.detail && state.detail.name ? state.detail.name : ''),\n                'entity-class': 'ORG',\n            };\n\n            // await axiosNtx.get('/api/mock/entity/'+ id +'/ian', {\n            await axiosNtx.get('entity/'+ id +'/ian', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelMotiveAgenda = c;\n                    commit('setStatusMotiveAgenda', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setMotiveAgenda', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusMotiveAgenda', result);\n                })\n                .catch((resp) => {\n                // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelMotiveAgenda;\n                    }\n\n                    commit('setStatusMotiveAgenda', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n    },\n};\n\nexport default organization;\n","import {axiosGraphql, axiosNtx} from '@/axios-main';\nimport axios from '@/axios-main';\nimport axiosOrigin from 'axios';\n// import {apolloClient} from '@/apollo';\n// import gql from 'graphql-tag';\n\n// import fs from 'fs';\n// import {fs} from 'fs';\n// import { readStream } from '@/util/fs';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListActor;\nlet cancelSearchActor;\nlet cancelListLogHistory;\nlet cancelIanFigure;\nlet cancelRelatedFigures;\nlet cancelMotiveAgenda;\n\nconst actor = {\n    namespaced: true,\n    state: {\n        status_list_actor: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_search_actor: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail: false,\n        status_list_log_history: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_ian_figure: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_related_figures: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_motive_agenda: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_actor: [],\n        search_actor: [],\n        detail: {},\n        list_log_history: {},\n        ian_figure: {},\n        related_figures: {},\n        motive_agenda: {},\n    },\n    mutations: {\n        setStatusListActor: (state, status) => {\n            state.status_list_actor = status;\n        },\n        setStatusSearchActor: (state, status) => {\n            state.status_search_actor = status;\n        },\n        setStatusDetail: (state, status) => {\n            state.status_detail = status;\n        },\n        setStatusListLogHistory: (state, status) => {\n            state.status_list_log_history = status;\n        },\n        setStatusIanFigure: (state, status) => {\n            state.status_ian_figure = status;\n        },\n        setStatusRelatedFigures: (state, status) => {\n            state.status_related_figures = status;\n        },\n        setStatusMotiveAgenda: (state, status) => {\n            state.status_motive_agenda = status;\n        },\n\n        setListActor: (state, data) => {\n            state.list_actor = data;\n        },\n        setSearchActor: (state, data) => {\n            state.search_actor = data;\n        },\n        setDetail: (state, data) => {\n            state.detail = data;\n        },\n        setListLogHistory: (state, data) => {\n            state.list_log_history = data;\n        },\n        setIanFigure: (state, data) => {\n            state.ian_figure = data;\n        },\n        setRelatedFigures: (state, data) => {\n            state.related_figures = data;\n        },\n        setMotiveAgenda: (state, data) => {\n            state.motive_agenda = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListActor({state, commit, dispatch}, [limit=9, page=1, keyword='', orderShort='']) {\n            if (state.status_list_actor.cancel !== null && state.status_list_actor.status === 'loading') {\n                await state.status_list_actor.cancel('Operation canceled by the user.');\n            }\n\n            await axiosGraphql.post(null, {\n                query: `query { \n                    getFigure (keyword: \"`+ keyword +`\", limit: `+ limit +`, orderShort: \"`+ orderShort +`\", page: `+ page +`) {\n                        doc {\n                            id\n                            name\n                            photo\n                            position {\n                                data\n                            }\n                        }\n                        pagination {\n                            currentPage\n                            hasNext\n                            hasPrev\n                            nextPage\n                            perPage\n                            prevPage\n                            total\n                            totalPage\n                        }\n                    }\n                }`,\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListActor = c;\n                    commit('setStatusListActor', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.getFigure;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListActor', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListActor', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListActor;\n                    }\n\n                    commit('setStatusListActor', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async cancelSearchActor({state}) {\n            if (state.status_search_actor.cancel !== null && state.status_search_actor.status === 'loading') {\n                await state.status_search_actor.cancel('Operation canceled by the user.');\n            }\n        },\n\n        async getSearchActor({state, commit, dispatch}, [limit=30, page=1, keyword='', orderShort='']) {\n            // if (state.status_search_actor.cancel !== null && state.status_search_actor.status === 'loading')\n            //   await state.status_search_actor.cancel('Operation canceled by the user.');\n\n            await dispatch('cancelSearchActor');\n\n            await axiosGraphql.post(null, {\n                query: `query { \n                    getFigure (keyword: \"`+ keyword +`\", limit: `+ limit +`, orderShort: \"`+ orderShort +`\", page: `+ page +`) {\n                        doc {\n                            id\n                            name\n                            photo\n                        }\n                    }\n                }`,\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelSearchActor = c;\n                    commit('setStatusSearchActor', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.getFigure.doc;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // commit('setListActor', data);\n                    commit('setSearchActor', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusSearchActor', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelSearchActor;\n                    }\n\n                    commit('setStatusSearchActor', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        getDetail({commit, dispatch}, id) {\n            commit('setStatusDetail', 'loading');\n\n            return axiosGraphql.post(null, {\n                // id\n                // license_plate {\n                //   id\n                //   plate_number\n                //   plate_type\n                // }\n                query: `query ($id: ID) { \n                    detailFigure(id: $id) {\n                        id\n                        activity {\n                            activity_date\n                            notes\n                        }\n                        address\n                        ambition\n                        award\n                        biographic\n                        birth_date\n                        birth_place\n                        blood_type\n                        career\n                        character\n                        city\n                        created_by\n                        district\n                        driving_license {\n                            license_number\n                            license_type\n                        }\n                        education\n                        family\n                        gender\n                        kk_number\n                        ktp_number\n                        marital_status\n                        msisdn\n                        name\n                        opinion\n                        organizational_experience\n                        photo\n                        postal_code\n                        profession\n                        profile\n                        province\n                        religion\n                        rt_rw\n                        social_media {\n                            media_type\n                            username\n                        }\n                        strength\n                        updated_at\n                        updated_by\n                        vehicle_reg {\n                            police_reg_number\n                            stnk_number\n                            type\n                        }\n                        village\n                    }\n                }`,\n                variables: {\n                    id: id,\n                },\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data.detailFigure;\n                    commit('setStatusDetail', true);\n                    commit('setDetail', data);\n                    return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    // dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n\n                    const result = {\n                        // status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response && resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        // data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n                    commit('setStatusDetail', 'failed');\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n                    return 'failed';\n                });\n        },\n\n        async create({commit, dispatch, rootState}, data) {\n            data.created_by = rootState.auth.profile.name;\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n\n            for (const index in data) {\n                if (index === 'photo') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            return axios.post('figure/create', params)\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n\n            // ==== graphql ===\n\n            // let operation = {\n            //   query: `mutation ($figure: FigureInput, $photo: Upload) {\n            //     createFigure(figure: $figure, photo: $photo) {\n            //       id\n            //       address\n            //       birth_date\n            //       birth_place\n            //       blood_type\n            //       city\n            //       created_by\n            //       district\n            //       driving_license {\n            //         license_number\n            //         license_type\n            //       }\n            //       gender\n            //       kk_number\n            //       ktp_number\n            //       marital_status\n            //       name\n            //       photo\n            //       postal_code\n            //       profession\n            //       province\n            //       religion\n            //       rt_rw\n            //       updated_by\n            //       vehicle_reg {\n            //         stnk_number\n            //         police_reg_number\n            //         type\n            //       }\n            //       village\n            //     }\n            //   }`,\n            //   variables: {\n            //     figure: data,\n            //     photo: null\n            //     // photo: photo\n            //   },\n            // };\n\n\n            // // try upload file with apollo\n\n            // // if (photo !== null) {\n            // //   // let map = {\n            // //   //   \"0\": [\"variables.photo\"]\n            // //   // };\n\n            // //   // // const concat = require(\"concat-stream\")\n\n            // //   // // var fs = require('fs');\n\n            // //   // // const util = require('util'),\n            // //   // // request = util.promisify(require('request')),\n            // //   // // fs = require('fs'),\n            // //   // //       fsp = fs.promises;\n\n            // //   // // const fsa = fs;\n\n            // //   // // let fd = new FormData()\n            // //   // let o = operation;\n\n            // //   // console.log('o', o);\n            // //   // console.log('photo', photo);\n            // //   // var FormData = require('form-data');\n\n            // //   // operation = new FormData();\n            // //   // operation.append('operations', JSON.stringify(o));\n            // //   // operation.append('map', JSON.stringify(map));\n            // //   // // operation.append('0', photo);\n            // //   // operation.append('0', photo);\n            // //   // // operation.append('0', fs.createReadStream(photo));\n            // //   // // operation.append('0', readStream(photo));\n\n            // //   // // var fs = require('fs');\n            // //   // // const fs = require('fs');\n\n            // //   // // operation.append(0, fs.createReadStream(photo));\n\n            // //   // console.log(operation)\n\n\n            // //   // ---------------------------------------------------------------------------------------------------------\n\n            // //   console.log('try apollo');\n            // //   console.log(apolloClient);\n\n            // //   // let data = await apolloClient.query({\n            // //   //   query: gql`\n            // //   //     query FigurePaginate ($keyword: String, $limit: Int, $orderShort: String, $page: Int) {\n            // //   //       getFigure (keyword: $keyword, limit: $limit, orderShort: $orderShort, page: $page) {\n            // //   //         doc {\n            // //   //           id\n            // //   //           name\n            // //   //           photo\n            // //   //           position {\n            // //   //             data\n            // //   //           }\n            // //   //         }\n            // //   //         pagination {\n            // //   //           currentPage\n            // //   //           hasNext\n            // //   //           hasPrev\n            // //   //           nextPage\n            // //   //           perPage\n            // //   //           prevPage\n            // //   //           total\n            // //   //           totalPage\n            // //   //         }\n            // //   //       }\n            // //   //     }\n            // //   //   `,\n            // //   //   variables: {\n            // //   //     keyword: keyword,\n            // //   //     limit: limit,\n            // //   //     orderShort: orderShort,\n            // //   //     page: page\n            // //   //   }\n            // //   // })\n            // //   // .then((resp) => {\n            // //   //   console.log('in then', resp)\n\n            // //   // })\n            // //   // .catch((resp) => {\n            // //   //   console.log('in catch', resp)\n\n            // //   // });\n\n            // //   console.log(data);\n            // //   console.log(photo);\n\n            // //   let send_data = await apolloClient.mutate({\n            // //       // mutation ($figure: FigureInput, $photo: Upload) {\n            // //     mutation: gql`\n            // //       mutation($figure: FigureInput, $photo: Upload) {\n            // //         createFigure(figure: $figure, photo: $photo) {\n            // //           id\n            // //           address\n            // //           birth_date\n            // //           birth_place\n            // //           blood_type\n            // //           city\n            // //           created_by\n            // //           district\n            // //           driving_license {\n            // //             license_number\n            // //             license_type\n            // //           }\n            // //           gender\n            // //           kk_number\n            // //           ktp_number\n            // //           marital_status\n            // //           name\n            // //           photo\n            // //           postal_code\n            // //           profession\n            // //           province\n            // //           religion\n            // //           rt_rw\n            // //           updated_by\n            // //           vehicle_reg {\n            // //             stnk_number\n            // //             police_reg_number\n            // //             type\n            // //           }\n            // //           village\n            // //         }\n            // //       }\n            // //     `,\n            // //     variables: {\n            // //       \"figure\": data,\n            // //       // photo: null\n            // //       \"photo\": photo\n            // //     },\n            // //   })\n            // //   .then((resp) => {\n            // //     console.log('in then', resp)\n\n            // //   })\n            // //   .catch((resp) => {\n            // //     console.log('in catch', resp)\n\n            // //   });\n\n            // //   return;\n            // // }\n\n            // // return axiosGraphql.post(null, operation, {\n            // // // return axiosGraphql.post('', operation, {\n            // //   // headers: operation.getHeaders(),\n            // //   headers: {\n            // //   // Headers: {\n            // //     // 'Content-Type': multipart/form-data;\n            // //     // 'Content-Type': 'application/json;multipart/form-data;',\n            // //     // 'Content-Type': 'application/json',\n            // //     // 'Content-Type': `application/json; boundary=${operation._boundary}`,\n            // //     // 'content-type': 'application/json',\n            // //     ...operation.getHeaders()\n            // //     // 'x-sdfsfd': 'asdasdad',\n            // //     // 'Content-Type': 'application/json;charset=UTF-8',\n            // //     // \"Access-Control-Allow-Origin\": \"*\",\n            // //   }\n            // // })\n\n            // return axiosGraphql.post(null, operation)\n            // .then((resp) => {\n            //   // console.log(resp);\n            //   if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.createFigure && Object.keys(resp.data.data.createFigure).length > 0) {\n            //   // if (resp.status === 200) {\n            //     return {result: 'success', data: resp.data.data.createFigure};\n            //   } else {\n            //     return {result: 'failed', data: resp.data};\n            //   }\n            // })\n            // .catch((resp) => {\n            //   // console.log(resp)\n            //   let result = {\n            //     status: 'failed',\n            //     code: (resp.response && resp.response.status ? resp.response.status : null),\n            //     message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n            //     data: (resp.response && resp.response.data ? resp.response.data : null),\n            //   };\n\n            //   dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n            //   return {\n            //     result: result.status,\n            //     data: result.data,\n            //   };\n            // });\n        },\n\n        async update({commit, dispatch, rootState}, [id, data, form_type]) {\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n            params.append('id', id);\n\n            for (const index in data) {\n                if (index === 'photo') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            return axios.post('figure/update', params)\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n\n            // ==== graphql ====\n\n            // let query = `mutation ($id: ID, $figure: FigureInput, $photo: Upload) {\n            //       updateFigure(id: $id, figure: $figure, photo: $photo) {\n            //         created_by\n            //         updated_by`;\n\n            // switch (form_type) {\n            //   case 'information':\n            //     query += `\n            //         id\n            //         address\n            //         birth_date\n            //         birth_place\n            //         blood_type\n            //         city\n            //         district\n            //         driving_license {\n            //           license_number\n            //           license_type\n            //         }\n            //         gender\n            //         kk_number\n            //         ktp_number\n            //         marital_status\n            //         name\n            //         photo\n            //         postal_code\n            //         profession\n            //         province\n            //         religion\n            //         rt_rw\n            //         vehicle_reg {\n            //           stnk_number\n            //           police_reg_number\n            //           type\n            //         }\n            //         village`;\n            //     break;\n\n            //   case 'biography':\n            //     query += `\n            //       profile\n            //       biographic`;\n            //     break;\n\n            //   case 'experience':\n            //     query += `\n            //       organizational_experience`;\n            //     break;\n\n            //   case 'character':\n            //     query += `\n            //       character`;\n            //     break;\n\n            //   case 'ambition':\n            //     query += `\n            //       ambition`;\n            //     break;\n\n            //   case 'opinion':\n            //     query += `\n            //       opinion`;\n            //     break;\n\n            //   case 'strength':\n            //     query += `\n            //       strength`;\n            //     break;\n\n            //   case 'family':\n            //     query += `\n            //       family`;\n            //     break;\n\n            //   default:\n            //     // code block\n            // };\n            // query += `}}`;\n\n            // return axiosGraphql.post(null, {\n            //   // params: params,\n            //   // data: params,\n\n            //   query: query,\n            //   variables: {\n            //     id: id,\n            //     figure: data,\n            //     photo: null\n            //   },\n            // })\n            // .then((resp) => {\n            //   // console.log(resp);\n            //   if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.updateFigure && Object.keys(resp.data.data.updateFigure).length > 0) {\n            //   // if (resp.status === 200) {\n            //     return {result: 'success', data: resp.data.data.updateFigure};\n            //   } else {\n            //     return {result: 'failed', data: resp.data};\n            //   }\n            // })\n            // .catch((resp) => {\n            //   // console.log(resp)\n            //   let result = {\n            //     status: 'failed',\n            //     code: (resp.response && resp.response.status ? resp.response.status : null),\n            //     message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n            //     data: (resp.response && resp.response.data ? resp.response.data : null),\n            //   };\n\n            //   dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n            //   return {\n            //     result: result.status,\n            //     data: result.data,\n            //   };\n            // });\n        },\n\n        async getListLogHIstory({state, commit, dispatch}, [limit=10, page=1, id='']) {\n            if (state.status_list_log_history.cancel !== null && state.status_list_log_history.status === 'loading') {\n                await state.status_list_log_history.cancel('Operation canceled by the user.');\n            }\n\n            await axiosGraphql.post(null, {\n                query: `query { \n                    getHistories (itemName: \"figures\", itemId: \"`+ id +`\", limit: `+ limit +`, page: `+ page +`) {\n                        histories {\n                            id\n                            itemId\n                            itemName\n                            user\n                            changes\n                            createdAt\n                            updatedAt\n                        }\n                        paginator {\n                            currentPage\n                            hasNextPage\n                            hasPrevPage\n                            itemCount\n                            next\n                            pageCount\n                            perPage\n                            prev\n                        }\n                    }\n                }`,\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListLogHistory = c;\n                    commit('setStatusListLogHistory', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data.getHistories;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListLogHistory', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListLogHistory', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListLogHistory;\n                    }\n\n                    commit('setStatusListLogHistory', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getIanFigure({state, commit, dispatch}, [name]) {\n            if (state.status_ian_figure.cancel !== null && state.status_ian_figure.status === 'loading') {\n                await state.status_ian_figure.cancel('Operation canceled by the user.');\n            }\n\n            // let params = new FormData();\n            // params.append('id', id);\n\n            const params = {\n                //   id: id,\n            };\n\n            // await axiosNtx.get('/api/mock/entity/UNK/ian?query='+name+'&entity-class=PER', {\n            await axiosNtx.get('entity/UNKNOWN/ian?query='+name+'&entity-class=PER', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelIanFigure = c;\n                    commit('setStatusIanFigure', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setIanFigure', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusIanFigure', result);\n\n                    // return 'success';\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelIanFigure;\n                    }\n\n                    commit('setStatusIanFigure', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n        async getRelatedFigures({state, commit, dispatch}, [name]) {\n            if (state.status_related_figures.cancel !== null && state.status_related_figures.status === 'loading') {\n                await state.status_related_figures.cancel('Operation canceled by the user.');\n            }\n            const params = {\n                //   id: id,\n            };\n\n            // await axiosNtx.get('/api/mock/entity/UNK/network?query='+name+'&entity-class=PER', {\n            await axiosNtx.get('entity/UNKNOWN/network?query='+name+'&entity-class=PER', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelRelatedFigures = c;\n                    commit('setStatusRelatedFigures', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setRelatedFigures', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusRelatedFigures', result);\n\n                    // return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelRelatedFigures;\n                    }\n\n                    commit('setStatusRelatedFigures', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getMotiveAgenda({state, commit, dispatch}) {\n            if (state.status_motive_agenda.cancel !== null && state.status_motive_agenda.status === 'loading') {\n                await state.status_motive_agenda.cancel('Operation canceled by the user.');\n            }\n\n            const id = 'UNKNOWN';\n            const params = {\n                // id: 'UNKNOWN',\n                'query': (state.detail && state.detail.name ? state.detail.name : ''),\n                'entity-class': 'PER',\n            };\n\n            // await axiosNtx.get('/api/mock/entity/'+ id +'/ian', {\n            await axiosNtx.get('entity/'+ id +'/ian', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelMotiveAgenda = c;\n                    commit('setStatusMotiveAgenda', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                // console.log(resp.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setMotiveAgenda', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusMotiveAgenda', result);\n                })\n                .catch((resp) => {\n                // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelMotiveAgenda;\n                    }\n\n                    commit('setStatusMotiveAgenda', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n    },\n};\n\nexport default actor;\n","import axios from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelList;\nlet cancelSearchIssue;\nlet cancelFindSuggestion;\n\nconst issue = {\n    namespaced: true,\n    state: {\n        status_list: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_search_issue: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_find_suggestion: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail: false,\n\n        list: [],\n        search_issue: [],\n        find_suggestion: [],\n        detail: {},\n    },\n    mutations: {\n        setStatusList: (state, status) => {\n            state.status_list = status;\n        },\n        setStatusSearchIssue: (state, status) => {\n            state.status_search_issue = status;\n        },\n        setStatusFindSuggestion: (state, status) => {\n            state.status_find_suggestion = status;\n        },\n        setStatusDetail: (state, status) => {\n            state.status_detail = status;\n        },\n\n        setList: (state, data) => {\n            state.list = data;\n        },\n        setSearchIssue: (state, data) => {\n            state.search_issue = data;\n        },\n        setFindSuggestion: (state, data) => {\n            state.find_suggestion = data;\n        },\n        setDetail: (state, data) => {\n            state.detail = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getList({state, commit, dispatch}, [limit=9, page=1, keyword='', gatra='', sort='desc']) {\n            if (state.status_list.cancel !== null && state.status_list.status === 'loading') {\n                await state.status_list.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                limit: limit,\n                // offset: page,\n                page: page,\n                gatra: gatra,\n                search: keyword,\n                dir: sort,\n            };\n\n            await axios.get('issue/', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelList = c;\n                    commit('setStatusList', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setList', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusList', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelList;\n                    }\n\n                    commit('setStatusList', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async cancelSearchIssue({state}) {\n            if (state.status_search_issue.cancel !== null && state.status_search_issue.status === 'loading') {\n                await state.status_search_issue.cancel('Operation canceled by the user.');\n            }\n        },\n\n        async getSearchIssue({state, commit, dispatch}, [limit=30, page=1, keyword='', gatra='', sort='desc']) {\n            // if (state.status_search_issue.cancel !== null && state.status_search_issue.status === 'loading')\n            //   await state.status_search_issue.cancel('Operation canceled by the user.');\n\n            await dispatch('cancelSearchIssue');\n\n            const params = {\n                limit: limit,\n                // offset: page,\n                page: page,\n                gatra: gatra,\n                search: keyword,\n                dir: sort,\n            };\n\n            // await axios.get('issue/', {\n            await axios.get('issue/search', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelSearchIssue = c;\n                    commit('setStatusSearchIssue', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // commit('setList', data);\n                    commit('setSearchIssue', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusSearchIssue', result);\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelSearchIssue;\n                    }\n\n                    commit('setStatusSearchIssue', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getFindSuggestion({state, commit, dispatch}, [keyword='']) {\n            if (state.status_find_suggestion.cancel !== null && state.status_find_suggestion.status === 'loading') {\n                await state.status_find_suggestion.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                search: keyword,\n            };\n\n            await axios.get('issue/suggestion', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelFindSuggestion = c;\n                    commit('setStatusFindSuggestion', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // commit('setList', data);\n                    commit('setFindSuggestion', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusFindSuggestion', result);\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelFindSuggestion;\n                    }\n\n                    commit('setStatusFindSuggestion', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        getDetail({commit, dispatch}, id) {\n            commit('setStatusDetail', 'loading');\n\n            return axios.get('issue/detail/' + id)\n                .then((resp) => {\n                    console.log(resp.data);\n                    const data = resp.data.data;\n                    commit('setStatusDetail', true);\n                    commit('setDetail', data);\n                    return 'success';\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    // dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n\n                    const result = {\n                        // status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        // data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n                    commit('setStatusDetail', 'failed');\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n                    return 'failed';\n                });\n        },\n\n        async create({commit, dispatch, rootState}, data) {\n            data.created_by = rootState.auth.profile.name;\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n\n            for (const index in data) {\n                // console.log(index, data[index]);\n\n                if (index === 'image') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            // return axiosGraphql.post(null, {\n            return axios.post('issue/create', params)\n                .then((resp) => {\n                    console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n        async update({commit, dispatch, rootState}, [id, data]) {\n            data.updated_by = rootState.auth.profile.name;\n\n            const params = new FormData();\n            // params.append(id, id);\n\n            for (const index in data) {\n                console.log(index, data[index]);\n\n                if (index === 'image') {\n                    if (data[index] !== null && data[index] !== '') {\n                        params.append(index, data[index]);\n                    }\n                } else {\n                    params.append(index, data[index]);\n                }\n            }\n\n            return axios.post('issue/update/'+ id, params)\n                .then((resp) => {\n                    console.log(resp);\n                    // if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n                    if (resp.status === 200) {\n                        return {result: 'success', data: resp.data};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    console.log(resp);\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n    },\n};\n\nexport default issue;\n","import axios from \"@/axios-main\";\nimport axiosOrigin from \"axios\";\n\nvar cancelToken = axiosOrigin.CancelToken;\nlet cancelListPhoto, cancelListAlbum;\n\nconst issue = {\n  namespaced: true,\n  state: {\n    status_list_photo: {\n      status: false,\n      cancel: null,\n      code: null,\n    },\n    status_list_album: {\n      status: false,\n      cancel: null,\n      code: null,\n    },\n    status_detail_album: false,\n\n    list_photo: {},\n    list_album: {},\n    detail_album: {},\n  },\n  mutations: {\n    setStatusListPhoto: (state, status) => {\n      state.status_list_photo = status;\n    },\n    setStatusListAlbum: (state, status) => {\n      state.status_list_album = status;\n    },\n    setStatusDetailAlbum: (state, status) => {\n      state.status_detail_album = status;\n    },\n\n    setListPhoto: (state, data) => {\n      state.list_photo = data;\n    },\n    setListAlbum: (state, data) => {\n      state.list_album = data;\n    },\n    setDetailAlbum: (state, data) => {\n      state.detail_album = data;\n    },\n  },\n  getters: {},\n  actions: {\n    async getListPhoto({ state, commit, dispatch }, [limit=9, page=1, keyword='']) {\n\n      if (state.status_list_photo.cancel !== null && state.status_list_photo.status === 'loading')\n        await state.status_list_photo.cancel('Operation canceled by the user.');\n\n      let params = {\n        limit: limit,\n        // offset: page,\n        page: page,\n        // search: keyword,\n      };\n\n      await axios.get('upload-image/image/list', {\n        params: params,\n        cancelToken: new cancelToken(function executor(c) {\n          cancelListPhoto = c;\n          commit('setStatusListPhoto', {\n            status: 'loading',\n            cancel: c,\n            code: null,\n          });\n        }),\n      })\n      .then((resp) => {\n        // console.log(resp.data.data)\n        let data = resp.data.data;\n        let result = {\n          status: true,\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        commit('setListPhoto', data);\n\n        if (Object.keys(data).length===0)\n          result.status = 'empty';\n\n        commit('setStatusListPhoto', result);\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        if (axiosOrigin.isCancel(resp)) {\n          result.status = 'loading';\n          result.cancel = cancelListPhoto;\n        }\n\n        commit('setStatusListPhoto', result);\n        if (!axiosOrigin.isCancel(resp))\n          dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], { root: true });\n      });\n    },\n\n    deletePhoto({ commit, dispatch }, id) {\n\n      return axios.delete('upload-image/image/delete/'+ id)\n      .then((resp) => {\n        // console.log(resp);\n        // if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n        if (resp.status === 200) {\n          return 'success';\n        } else {\n          return 'failed';\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          code: (resp.response && resp.response.status ? resp.response.status : null),\n          message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n          data: (resp.response && resp.response.data ? resp.response.data : null),\n        };\n\n        dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n        return {\n          result: result.status,\n          data: result.data,\n        };\n      });\n    },\n\n    async getListAlbum({ state, commit, dispatch }, [limit=9, page=1, keyword='']) {\n\n      if (state.status_list_album.cancel !== null && state.status_list_album.status === 'loading')\n        await state.status_list_album.cancel('Operation canceled by the user.');\n\n      let params = {\n        limit: limit,\n        // offset: page,\n        page: page,\n        // search: keyword,\n      };\n\n      await axios.get('upload-image/album/list', {\n        params: params,\n        cancelToken: new cancelToken(function executor(c) {\n          cancelListAlbum = c;\n          commit('setStatusListAlbum', {\n            status: 'loading',\n            cancel: c,\n            code: null,\n          });\n        }),\n      })\n      .then((resp) => {\n        // console.log(resp.data.data)\n        let data = resp.data.data;\n        let result = {\n          status: true,\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        commit('setListAlbum', data);\n\n        if (Object.keys(data).length===0)\n          result.status = 'empty';\n\n        commit('setStatusListAlbum', result);\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          cancel: null,\n          code: resp.response && resp.response.status ? resp.response.status : null,\n        };\n\n        if (axiosOrigin.isCancel(resp)) {\n          result.status = 'loading';\n          result.cancel = cancelListAlbum;\n        }\n\n        commit('setStatusListAlbum', result);\n        if (!axiosOrigin.isCancel(resp))\n          dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], { root: true });\n      });\n    },\n\n    getDetailAlbum({ commit, dispatch }, id) {\n\n      commit('setStatusDetailAlbum', 'loading');\n    \n      return axios.get('upload-image/album/detail/' + id)\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data.data;\n        commit('setStatusDetailAlbum', true);\n        commit('setDetailAlbum', data);\n        return 'success';\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        // dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), { root: true });\n\n        let result = {\n          // status: 'failed',\n          code: (resp.response && resp.response.status ? resp.response.status : null),\n          message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n          // data: (resp.response && resp.response.data ? resp.response.data : null),\n        };\n        commit('setStatusDetailAlbum', 'failed');\n        dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n        return 'failed';\n      });\n    },\n\n    async createAlbum({ commit, dispatch, rootState }, data) {\n\n      data.created_by = rootState.auth.profile.name;\n      data.updated_by = rootState.auth.profile.name;\n\n      let params = new FormData();\n\n      for(var index in data) { \n        // console.log(index, data[index]);\n\n        // if (index === 'image' || index === 'images') {\n        if (index === 'images' && data[index].length > 0) {\n          // if (data[index] !== null && data[index] !== '')\n          //   params.append(index, data[index]);\n\n          for (var i = 0; i < data[index].length; i++) {\n            params.append(index, data[index][i]);\n            // data[index][i]\n          }\n\n        } else {\n\n          params.append(index, data[index]);\n        }\n      }\n\n      return axios.post('upload-image/album/create', params, {\n        // headers: {\n        //   // 'Content-Type': 'application/json',\n        //   'Content-Type': 'multipart/form-data',\n        // }\n      })\n      .then((resp) => {\n        // console.log(resp);\n        if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n        // if (resp.status === 200) {\n          return {result: 'success', data: resp.data.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          code: (resp.response && resp.response.status ? resp.response.status : null),\n          message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n          data: (resp.response && resp.response.data ? resp.response.data : null),\n        };\n\n        dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n        return {\n          result: result.status,\n          data: result.data,\n        };\n      });\n    },\n\n    async updateAlbum({ commit, dispatch, rootState }, [id, data]) {\n\n      data.updated_by = rootState.auth.profile.name;\n\n      let params = new FormData();\n\n      for(var index in data) { \n        // console.log(index, data[index]);\n\n        // if (index === 'image' || index === 'images') {\n        if (index === 'images' && data[index].length > 0) {\n          // if (data[index] !== null && data[index] !== '')\n          //   params.append(index, data[index]);\n\n          for (var i = 0; i < data[index].length; i++) {\n            params.append(index, data[index][i]);\n            // data[index][i]\n          }\n\n        } else {\n\n          params.append(index, data[index]);\n        }\n      }\n\n      return axios.post('upload-image/album/update/'+ id, params, {\n        // headers: {\n        //   // 'Content-Type': 'application/json',\n        //   'Content-Type': 'multipart/form-data',\n        // }\n      })\n      .then((resp) => {\n        // console.log(resp);\n        if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n        // if (resp.status === 200) {\n          return {result: 'success', data: resp.data.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          code: (resp.response && resp.response.status ? resp.response.status : null),\n          message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n          data: (resp.response && resp.response.data ? resp.response.data : null),\n        };\n\n        dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n        return {\n          result: result.status,\n          data: result.data,\n        };\n      });\n    },\n\n    deleteAlbum({ commit, dispatch }, id) {\n\n      return axios.delete('upload-image/album/delete/'+ id)\n      .then((resp) => {\n        // console.log(resp);\n        // if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n        if (resp.status === 200) {\n          return 'success';\n        } else {\n          return 'failed';\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        let result = {\n          status: 'failed',\n          code: (resp.response && resp.response.status ? resp.response.status : null),\n          message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n          data: (resp.response && resp.response.data ? resp.response.data : null),\n        };\n\n        dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n        return {\n          result: result.status,\n          data: result.data,\n        };\n      });\n    },\n\n    // async create({ commit, dispatch, rootState }, data) {\n\n    //   data.created_by = rootState.auth.profile.name;\n    //   data.updated_by = rootState.auth.profile.name;\n\n    //   let params = new FormData();\n\n    //   for(var index in data) { \n    //     // console.log(index, data[index]);\n\n    //     if (index === 'image') {\n    //       if (data[index] !== null && data[index] !== '')\n    //         params.append(index, data[index]);\n\n    //     } else {\n\n    //       params.append(index, data[index]);\n    //     }\n    //   }\n\n    //   // return axiosGraphql.post(null, {\n    //   return axios.post('issue/api/create', params)\n    //   .then((resp) => {\n    //     console.log(resp);\n    //     if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n    //     // if (resp.status === 200) {\n    //       return {result: 'success', data: resp.data.data};\n    //     } else {\n    //       return {result: 'failed', data: resp.data};\n    //     }\n    //   })\n    //   .catch((resp) => {\n    //     // console.log(resp)\n    //     let result = {\n    //       status: 'failed',\n    //       code: (resp.response && resp.response.status ? resp.response.status : null),\n    //       message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n    //       data: (resp.response && resp.response.data ? resp.response.data : null),\n    //     };\n\n    //     dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n    //     return {\n    //       result: result.status,\n    //       data: result.data,\n    //     };\n    //   });\n    // },\n\n    // async update({ commit, dispatch, rootState }, [id, data]) {\n\n    //   data.updated_by = rootState.auth.profile.name;\n\n    //   let params = new FormData();\n    //   // params.append(id, id);\n\n    //   for(var index in data) { \n    //     console.log(index, data[index]);\n\n    //     if (index === 'image') {\n    //       if (data[index] !== null && data[index] !== '')\n    //         params.append(index, data[index]);\n          \n    //     } else {\n\n    //       params.append(index, data[index]);\n    //     }\n    //   }\n\n    //   return axios.post('issue/api/update/'+ id, params)\n    //   .then((resp) => {\n    //     console.log(resp);\n    //     // if (resp.status === 200 && resp.data && resp.data.data && Object.keys(resp.data.data).length > 0) {\n    //     if (resp.status === 200) {\n    //       return {result: 'success', data: resp.data};\n    //     } else {\n    //       return {result: 'failed', data: resp.data};\n    //     }\n    //   })\n    //   .catch((resp) => {\n    //     console.log(resp)\n    //     let result = {\n    //       status: 'failed',\n    //       code: (resp.response && resp.response.status ? resp.response.status : null),\n    //       message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n    //       data: (resp.response && resp.response.data ? resp.response.data : null),\n    //     };\n\n    //     dispatch('errors/handleApiResponse', [result.code, result.message], { root: true });\n\n    //     return {\n    //       result: result.status,\n    //       data: result.data,\n    //     };\n    //   });\n    // },\n  }\n};\n\nexport default issue;\n","import {axiosGraphql} from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListTrend;\n\nconst trend = {\n    namespaced: true,\n    state: {\n        status_list_trend: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_trend: [],\n        detail_trend: {},\n    },\n    mutations: {\n        setStatusListTrend: (state, status) => {\n            state.status_list_trend = status;\n        },\n\n        setListTrend: (state, data) => {\n            state.list_trend = data;\n        },\n        setDetaildTrend: (state, data) => {\n            state.detail_trend = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListTrend({state, commit, dispatch}, [limit=10, page=1, keyword='', limitWordId='', status='']) {\n            if (state.status_list_trend.cancel !== null && state.status_list_trend.status === 'loading') {\n                await state.status_list_trend.cancel('Operation canceled by the user.');\n            }\n            const filter = {\n                'status': status,\n                'limit_word_id': limitWordId,\n            };\n            await axiosGraphql.post(null, {\n                query: `query ($filter: FilterParam){ \n                    trends (\n                        limit: `+ limit +`,\n                        page: `+ page +`,\n                        keyword: \"`+ keyword +`\"\n                        filter: $filter \n                    ) {\n                        doc {\n                            id\n                            label\n                            slug\n                            status\n                            gatra\n                            must_word\n                            exclude_word\n                            limit_word{\n                                id\n                                name\n                            }\n                        }\n                        pagination {\n                            perPage\n                            total\n                            totalPage\n                            prevPage\n                            hasPrev\n                            nextPage\n                            hasNext\n                        }\n                    }\n                }`,\n                variables: {\n                    filter: filter,\n                },\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListTrend = c;\n                    commit('setStatusListTrend', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    const data = resp.data.data.trends;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // console.log(data)\n                    commit('setListTrend', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListTrend', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListTrend;\n                    }\n\n                    commit('setStatusListTrend', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async create({commit, dispatch, rootState}, data) {\n            data.status = true;\n            data.created_by = rootState.auth.profile.name;\n            data.updated_by = rootState.auth.profile.name;\n            return axiosGraphql.post(null, {\n                query: `mutation ($trend: TrendInput) { \n                    createTrend(trend: $trend) {\n                        id\n                        gatra\n                        must_word\n                        exclude_word\n                        limit_word {\n                            id\n                            name\n                        }\n                        label\n                        created_by\n                        updated_by\n                    }\n                }`,\n                variables: {\n                    trend: data,\n                },\n            })\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.createTrend && Object.keys(resp.data.data.createTrend).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.createTrend};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n        async update({commit, dispatch, rootState}, [id, data]) {\n            return axiosGraphql.post(null, {\n                // params: params,\n                // data: params,\n                query: `mutation ($id: ID, $trend: TrendInput) {\n                    updateTrend(id: $id, trend: $trend) {\n                        id\n                        gatra\n                        must_word\n                        exclude_word\n                        limit_word {\n                            id\n                            name\n                        }\n                        label\n                        created_by\n                        updated_by\n                    }\n                }`,\n                // variables: data,\n                variables: {\n                    id: id,\n                    trend: data,\n                },\n            })\n                .then((resp) => {\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.updateTrend && Object.keys(resp.data.data.updateTrend).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.updateTrend};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n        // getDetail({commit, dispatch}, id) {\n        //     const params = new FormData();\n        //     params.append('id', id);\n\n        //     return axios.post('api/v1/role', params)\n        //         .then((resp) => {\n        //             // console.log(resp.data)\n        //             const data = resp.data;\n        //             commit('setDetail', data);\n        //             return 'success';\n        //         })\n        //         .catch((resp) => {\n        //             // console.log(resp)\n        //             dispatch('errors/handleApiResponse', (resp.response && resp.response.status ? resp.response.status : null), {root: true});\n        //             return 'failed';\n        //         });\n        // },\n\n        async changeStatus({commit, dispatch, rootState}, [id, status]) {\n            // data.updated_by = rootState.auth.profile.name;\n\n            // let params = new FormData();\n            // params.append('name', name);\n            // params.append('label', label);\n            // params.append('status', status);\n            // params.append('description', description);\n\n            return axiosGraphql.post(null, {\n                query: `mutation { \n                    changeTrendStatus(\n                        id: \"`+ id +`\", \n                        status: `+ status +`,\n                    ) {\n                        id\n                        label\n                    }\n                }`,\n            })\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.changeTrendStatus && Object.keys(resp.data.data.changeTrendStatus).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.changeTrendStatus};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n        async refreshTrend({commit, dispatch, rootState}, [id]) {\n            return axiosGraphql.post(null, {\n                query: `mutation { \n                    refreshTrend(\n                        id: \"`+ id +`\", \n                    )\n                }`,\n            })\n                .then((resp) => {\n                    // console.log(resp);\n                    if (resp.status === 200 && resp.data && resp.data.data && resp.data.data.refreshTrend && Object.keys(resp.data.data.refreshTrend).length > 0) {\n                        // if (resp.status === 200) {\n                        return {result: 'success', data: resp.data.data.refreshTrend};\n                    } else {\n                        return {result: 'failed', data: resp.data};\n                    }\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        code: (resp.response && resp.response.status ? resp.response.status : null),\n                        message: (resp.response.data && resp.response.data.message ? resp.response.data.message : null),\n                        data: (resp.response && resp.response.data ? resp.response.data : null),\n                    };\n\n                    dispatch('errors/handleApiResponse', [result.code, result.message], {root: true});\n\n                    return {\n                        result: result.status,\n                        data: result.data,\n                    };\n                });\n        },\n\n    },\n};\n\nexport default trend;\n","import {axiosGraphql} from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListNews;\n\nconst news = {\n    namespaced: true,\n    state: {\n        status_list_news: {\n            status: 'false',\n            cancel: null,\n            code: null,\n        },\n        list_news: [],\n        search_news: {},\n    },\n    mutations: {\n        setStatusListNews: (state, status) => {\n            state.status_list_news = status;\n        },\n        setListNews: (state, data) => {\n            state.list_news = data;\n        },\n        setSearchNews: (state, data) => {\n            state.search_news = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListNews({state, commit, dispatch}, [limit=10, page=1, search, startDate='', endDate='']) {\n            if (state.status_list_news.cancel !== null && state.status_list_news.status === 'loading') {\n                await state.status_list_news.cancel('Operation canceled by the user.');\n            }\n            await axiosGraphql.post(null, {\n                query: `query ($search: SearchParam){ \n                    searchNews (\n                        limit: `+ limit +`,\n                        page: `+ page +`,\n                        search: $search,\n                        start_date: \"`+ startDate +`\",\n                        end_date: \"`+ endDate +`\",\n                    ) {\n                        doc {\n                            title\n                            source\n                            url\n                            urlToImage\n                            content\n                            description\n                            publishedAt\n                        }\n                        pagination {\n                            perPage\n                            total\n                            totalPage\n                            prevPage\n                            hasPrev\n                            nextPage\n                            hasNext\n                        }\n                    }\n                }`,\n                variables: {\n                    search: search,\n                },\n            }, {\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListNews = c;\n                    commit('setStatusListNews', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    const data = resp.data.data.searchNews;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    // console.log(data)\n                    commit('setListNews', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListNews', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListNews;\n                    }\n\n                    commit('setStatusListNews', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n    },\n};\n\nexport default news;\n","import axios from '@/axios-main';\nimport axiosOrigin from 'axios';\n\nconst cancelToken = axiosOrigin.CancelToken;\nlet cancelListTrending;\nlet cancelListTweet;\nlet cancelListFollowing;\nlet cancelLDetailProfile;\n\nconst medsos = {\n    namespaced: true,\n    state: {\n        status_list_trending: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_list_tweet: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail_following: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n        status_detail_profile: {\n            status: false,\n            cancel: null,\n            code: null,\n        },\n\n        list_trending: [],\n        list_tweet: [],\n        list_tweet_trending: [],\n        detail_following: {},\n        detail_profile: {},\n    },\n    mutations: {\n        setStatusListTrending: (state, status) => {\n            state.status_list_trending = status;\n        },\n        setStatusListTweet: (state, status) => {\n            state.status_list_tweet = status;\n        },\n        setStatusListFollowing: (state, status) => {\n            state.status_detail_following = status;\n        },\n        setStatusDetailProfile: (state, status) => {\n            state.status_detail_profile = status;\n        },\n\n        setListTrending: (state, data) => {\n            state.list_trending = data;\n        },\n        setListTweet: (state, data) => {\n            state.list_tweet = data;\n        },\n        setListTweetTrending: (state, data) => {\n            state.list_tweet_trending = data;\n        },\n        setListFollowing: (state, data) => {\n            state.detail_following = data;\n        },\n        setDetailProfile: (state, data) => {\n            state.detail_profile = data;\n        },\n    },\n    getters: {},\n    actions: {\n        async getListTrending({state, commit, dispatch}, [startDate='', endDate='', limit=50]) {\n            if (state.status_list_trending.cancel !== null && state.status_list_trending.status === 'loading') {\n                await state.status_list_trending.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                limit: limit,\n                start_date: startDate,\n                end_date: endDate,\n            };\n\n            await axios.get('medsos/medsos/list-trend', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListTrending = c;\n                    commit('setStatusListTrending', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListTrending', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListTrending', result);\n                })\n                .catch((resp) => {\n                    // console.log(resp)\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListTrending;\n                    }\n\n                    commit('setStatusListTrending', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getListTweet({state, commit, dispatch}, [limit=20, page=1, startDate='', endDate='', label='', query='', fromTrending=false]) {\n            if (state.status_list_tweet.cancel !== null && state.status_list_tweet.status === 'loading') {\n                await state.status_list_tweet.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                limit: limit,\n                page: page,\n                start_date: startDate,\n                end_date: endDate,\n                label: label,\n                q: query,\n                source: 1,\n                // user:\n            };\n\n            await axios.get('medsos/medsos/list', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListTweet = c;\n                    commit('setStatusListTweet', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    // console.log(resp.data.data)\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n                    if (fromTrending) {\n                        commit('setListTweetTrending', data);\n                    } else {\n                        commit('setListTweet', data);\n                    }\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListTweet', result);\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListTweet;\n                    }\n\n                    commit('setStatusListTweet', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getListFollowing({state, commit, dispatch}, [username='']) {\n            if (state.status_detail_following.cancel !== null && state.status_detail_following.status === 'loading') {\n                await state.status_detail_following.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                username: username,\n            };\n\n            await axios.get('medsos/following/twitter', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelListFollowing = c;\n                    commit('setStatusListFollowing', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    const data = resp.data.data;\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    commit('setListFollowing', data);\n\n                    if (Object.keys(data).length===0) {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusListFollowing', result);\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelListFollowing;\n                    }\n\n                    commit('setStatusListFollowing', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n\n        async getDetailProfile({state, commit, dispatch}, [user='']) {\n            if (state.status_detail_profile.cancel !== null && state.status_detail_profile.status === 'loading') {\n                await state.status_detail_profile.cancel('Operation canceled by the user.');\n            }\n\n            const params = {\n                user: user,\n            };\n\n            await axios.get('medsos/medsos/detail', {\n                params: params,\n                cancelToken: new cancelToken(function executor(c) {\n                    cancelLDetailProfile = c;\n                    commit('setStatusDetailProfile', {\n                        status: 'loading',\n                        cancel: c,\n                        code: null,\n                    });\n                }),\n            })\n                .then((resp) => {\n                    const result = {\n                        status: true,\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n                    if (resp.data && resp.data.data && resp.data.data.length > 0) {\n                        let data = resp.data.data;\n                        try {\n                            data = data[0];\n                            commit('setDetailProfile', data);\n                        } catch (error) {\n                            console.log('error');\n                            console.log(error);\n                        }\n\n\n                        if (Object.keys(data).length===0) {\n                            result.status = 'empty';\n                        }\n                    } else {\n                        result.status = 'empty';\n                    }\n\n                    commit('setStatusDetailProfile', result);\n                })\n                .catch((resp) => {\n                    const result = {\n                        status: 'failed',\n                        cancel: null,\n                        code: resp.response && resp.response.status ? resp.response.status : null,\n                    };\n\n                    if (axiosOrigin.isCancel(resp)) {\n                        result.status = 'loading';\n                        result.cancel = cancelLDetailProfile;\n                    }\n\n                    commit('setStatusDetailProfile', result);\n                    if (!axiosOrigin.isCancel(resp)) {\n                        dispatch('errors/handleApiResponse', [result.code, (resp.response.data && resp.response.data.message ? resp.response.data.message : null)], {root: true});\n                    }\n                });\n        },\n    },\n};\n\nexport default medsos;\n","const config = {\n    namespaced: true,\n    state: {\n        theme: 'light',\n        list_gatra: [\n            {\n                label: 'ekonomi',\n                name: 'Ekonomi',\n            },\n            {\n                label: 'politik',\n                name: 'Politik',\n            },\n            {\n                label: 'ideologi',\n                name: 'Ideologi',\n            },\n            {\n                label: 'hankam',\n                name: 'Pertahanan dan Keamanan',\n            },\n            {\n                label: 'sosbud',\n                name: 'Sosial Budaya',\n            },\n        ],\n    },\n    mutations: {\n        setTheme: (state, data) => {\n            state.theme = data;\n        },\n    },\n    getters: {\n        getDefaultImage() {\n            return (process.env.VUE_APP_DEFAULT_IMAGE ? process.env.VUE_APP_DEFAULT_IMAGE : '/images/no-image.jpg');\n        },\n        getDefaultImageProfile() {\n            return (process.env.VUE_APP_DEFAULT_IMAGE_PROFILE ? process.env.VUE_APP_DEFAULT_IMAGE_PROFILE : '/images/no-image-profile.jpg');\n        },\n    },\n    actions: {},\n};\n\nexport default config;\n","import axios from \"@/axios-main\";\nimport { axiosGraphql } from \"@/axios-main\";\n// import config from \"@/config/api\";\n// import router from \"@/router\";\n\nconst auth = {\n  namespaced: true,\n  state: {\n    token: null,\n    user: null,\n    profile: {},\n  },\n  mutations: {\n    authUser(state, userData) {\n      if (userData.data) {\n        state.user = userData.data;\n      }\n    },\n    setToken(state, token) {\n      if (token.access_token) {\n        // token.access_token = token.access_token +'aoipsjdoaud999999999eheheh';\n\n        state.token = token;\n        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token.access_token;\n        axiosGraphql.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token.access_token;\n      }\n    },\n    // storeUser(state, user) {\n    //   state.userInfo = user;\n    // },\n    clearAuth(state) {\n      state.token = null;\n      state.user = null;\n      axios.defaults.headers.common[\"Authorization\"] = null;\n      axiosGraphql.defaults.headers.common[\"Authorization\"] = null ;\n    },\n    setProfile(state, data) {\n      state.profile = data;\n    },\n  },\n  getters: {\n    isAuthenticated(state) {\n      if (!state.token) return false;\n      return true;\n    },\n    getUser(state) {\n      return state.user;\n    },\n    getToken(state) {\n      return state.token;\n    }\n  },\n  actions: {\n    // setLogoutTimer({ dispatch }, expiresIn) {\n    //   setTimeout(() => {\n    //     dispatch(\"logout\");\n    //   }, expiresIn * 1000);\n    // },\n    // tryAutoLogin({ commit, dispatch }) {\n    //   if (!localStorage.getItem(\"token\")) {\n    //     return false;\n    //   }\n    //   if (new Date() >= localStorage.getItem(\"expiresDate\")) {\n    //     return false;\n    //   }\n\n    //   commit(\"authUser\", {\n    //     token: localStorage.getItem(\"token\")\n    //   });\n    //   return !!dispatch(\"fetchUser\");\n    // },\n\n    async login({ commit, dispatch }, [email, password]) {\n\n      // console.log('on auth -> login')\n      axios.defaults.headers.common[\"Origin-Request\"] = 'graph';\n\n      let params = new FormData();\n\n      params.append('email', email);\n      params.append('password', password);\n\n      return axios.post('bff/auth/login', params)\n      .then((resp) => {\n        // console.log(resp.data)\n        \n        axios.defaults.headers.common[\"Origin-Request\"] = null;\n\n        if (resp.data && resp.data.data && resp.data.data.access_token) {\n          // commit('authUser', resp.data);\n          commit('setToken', resp.data.data);\n\n          return {result: 'success', data: resp.data};\n          \n        } else {\n\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        axios.defaults.headers.common[\"Origin-Request\"] = null;\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n\n    logout({ commit, dispatch }) {\n\n      return axios.post('bff/auth/logout')\n      .then((resp) => {\n        // console.log(resp)\n        if (resp.status === 200) {\n          \n          // commit('setDownloadApp', {});\n          commit(\"clearAuth\");\n\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', [(resp.response && resp.response.status ? resp.response.status : null)], { root: true });\n\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n\n      // router.push({ name: 'LoginPage' });\n    },\n\n    // getProfile({ commit, dispatch }, [id]) {\n    getProfile({ commit, dispatch, getters }) {\n\n      return axios.get('bff/auth/user/profile')\n      .then((resp) => {\n        // console.log(resp.data)\n        let data = resp.data;\n        // update local storage\n        // commit('authUser', { user: data.data });\n        commit('authUser', data.data );\n        commit('setProfile', data.data);\n        return 'success';\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', [(resp.response && resp.response.status ? resp.response.status : null)], { root: true });\n        return 'failed';\n      });\n    },\n\n    // updateProfile({ commit, dispatch, getters }, [name='', username='', email='', password='', repeat_password='']) {\n    updateProfile({ commit, dispatch, getters }, [name='', password='', repeat_password='']) {\n\n      let params = new FormData();\n      params.append('name', name);\n      // params.append('username', username);\n      // params.append('email', email);\n      // params.append('role_id', getters.getUser.role.id);\n      params.append('password', password);\n      params.append('repeat_password', repeat_password);\n\n      return axios.put('bff/auth/user/update', params)\n      .then((resp) => {\n        // console.log(resp.data)        \n        if (resp.status === 200 && resp.data.message.toLowerCase() === 'success') {\n          return {result: 'success', data: resp.data};\n        } else {\n          return {result: 'failed', data: resp.data};\n        }\n      })\n      .catch((resp) => {\n        // console.log(resp)\n        dispatch('errors/handleApiResponse', [(resp.response && resp.response.status ? resp.response.status : null)], { root: true });\n\n        return {result: 'failed', data: (resp.response && resp.response.data ? resp.response.data : null)};\n      });\n    },\n  },\n};\n\nexport default auth;\n","import router from \"@/router\";\n\nconst errors = {\n  namespaced: true,\n  state: {},\n  mutations: {},\n  getters: {},\n  actions: {\n    async handleApiResponse ({ commit }, [status_code=null, message='Something wrong, please try again.']) {\n      if (status_code !== null) {\n        switch(status_code) {\n          case 401:\n            await commit('auth/clearAuth', null, { root: true });\n\n            if (router.currentRoute.name !== 'LoginPage')\n              router.push({ name: 'LoginPage' });\n              // alert('401');\n            break;\n\n          case 419:\n            await commit('auth/clearAuth', null, { root: true });\n\n            if (router.currentRoute.name !== 'LoginPage')\n              router.push({ name: 'LoginPage' });\n              // alert('401');\n            break;\n\n          case 403:\n              Event.$emit('error', 'Anda tidak mempunyai hak akses.');\n            // if (router.currentRoute.name !== 'LoginPage') {\n            //   router.push({ name: 'LoginPage' });\n            //   // alert('403: Forbidden Page!');\n            // }\n            break;\n\n          // case 404:\n          //   if (router.currentRoute.name !== 'PageNotFound')\n          //     router.push({ name: 'PageNotFound' });\n          //   break;\n\n          // case 422:\n          //   break;\n          \n          default:\n            // Event.$emit('warning', message);\n            Event.$emit('error');\n            // alert(status_code);\n        } \n      }\n    },\n  }\n};\n\nexport default errors;\n","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport createPersistedState from 'vuex-persistedstate';\nimport SecureLS from 'secure-ls';\n\nimport config from './modules/config';\nimport auth from './modules/auth';\nimport errors from './modules/errors';\n// import dashboard from \"./modules/dashboard\";\n// import clients from \"./modules/clients\";\n// import modules from \"./modules/modules\";\n// import functions from \"./modules/functions\";\n\nimport cases from './modules/general/cases';\n\nimport roles from './modules/general/roles';\nimport users from './modules/general/users';\n// import acl from \"./modules/acl\";\n\nimport graph from './modules/graph';\n\nimport topics from './modules/topics';\n\nimport organization from './modules/bdi/organization';\nimport actor from './modules/bdi/actor';\nimport issue from './modules/bdi/issue';\nimport photo from './modules/bdi/photo';\nimport trend from './modules/trend';\nimport news from './modules/news';\nimport medsos from './modules/medsos';\n\nVue.use(Vuex);\n\nconst ls = new SecureLS({isCompression: false});\n\nexport default new Vuex.Store({\n    state: {\n        isIdle: false,\n    },\n    mutations: {},\n    getters: {},\n    actions: {},\n    modules: {\n        config,\n        auth,\n        errors,\n        // dashboard,\n        // clients,\n        // modules,\n        // functions,\n        cases,\n        roles,\n        users,\n        // acl,\n\n        graph,\n        topics,\n        organization,\n        actor,\n        issue,\n        photo,\n        trend,\n        news,\n        medsos,\n    },\n    plugins: [createPersistedState({\n        storage: {\n            getItem: (key) => ls.get(key),\n            setItem: (key, value) => ls.set(key, value),\n            removeItem: (key) => ls.remove(key),\n        },\n        paths: [\n            'auth',\n            'config.theme',\n        ],\n    })],\n});\n","import Vue from 'vue';\nimport Router from 'vue-router';\nVue.use(Router);\n\nexport default new Router({\n    mode: 'history',\n    // scrollBehavior: function(to) {\n    //     if (to.hash) {\n    //         return { selector: to.hash };\n    //     } else {\n    //         return { x: 0, y: 0 };\n    //     }\n    // },\n    routes: [\n        // Auth\n        {\n            path: '/login',\n            name: 'LoginPage',\n            component: (resolve) => require(['@/pages/auth/Login.vue'], resolve),\n            meta: {\n                layout: 'blank-layout',\n            },\n        },\n        // graph\n        {\n            path: '/',\n            name: 'GraphPage',\n            component: (resolve) => require(['@/pages/graph/Index.vue'], resolve),\n            meta: {\n                layout: 'graph-layout',\n                requiresAuth: true,\n            },\n        },\n        // BDI\n        {\n            path: '/bdi/search',\n            // name: 'BDI_SearchShell',\n            component: (resolve) => require(['@/pages/bdi/Index'], resolve),\n            children: [\n                {\n                    path: '',\n                    name: 'BDI_SearchResult',\n                    component: (resolve) => require(['@/pages/bdi/search/Index'], resolve),\n                },\n            ],\n        },\n        {\n            path: '/bdi',\n            name: 'BdiPage',\n            component: (resolve) => require(['@/pages/bdi/Index'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                // {\n                //     path: 'search',\n                //     name: 'BDI_Search',\n                //     component: resolve => require(['@/pages/bdi/search/Index'], resolve),\n                // },\n                {\n                    path: 'organisasi/:keyword?',\n                    name: 'BDI_ListOfOrganization',\n                    component: (resolve) => require(['@/pages/bdi/ListOfOrganization'], resolve),\n                },\n                {\n                    path: 'tokoh/:keyword?',\n                    name: 'BDI_ListOfActor',\n                    component: (resolve) => require(['@/pages/bdi/ListOfActor'], resolve),\n                },\n                {\n                    path: 'isu',\n                    name: 'BDI_ListOfIssues',\n                    component: (resolve) => require(['@/pages/bdi/ListOfIssues'], resolve),\n                },\n                {\n                    path: 'foto',\n                    // name: 'BDI_ListOfPhoto',\n                    component: (resolve) => require(['@/pages/bdi/ListOfPhoto'], resolve),\n                    children: [\n                        {\n                            path: '',\n                            name: 'BDI_ListOfPhotoIndex',\n                            component: (resolve) => require(['@/pages/bdi/photo/Index'], resolve),\n                        },\n                        {\n                            path: 'album',\n                            name: 'BDI_ListOfPhotoAlbum',\n                            component: (resolve) => require(['@/pages/bdi/photo/Album'], resolve),\n                        },\n                        {\n                            path: 'form/:id',\n                            name: 'BDI_ListOfPhotoForm',\n                            component: (resolve) => require(['@/pages/bdi/photo/Form'], resolve),\n                        },\n                    ],\n                },\n            ],\n        },\n        // Organization\n        {\n            path: '/organisasi/:id',\n            name: 'OrganizationPage',\n            component: (resolve) => require(['@/pages/organization/Shell'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: 'detail',\n                    name: 'DetailOfOrganization',\n                    component: (resolve) => require(['@/pages/organization/Index'], resolve),\n                    children: [\n                        {\n                            path: 'profil',\n                            name: 'ProfileOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/profile/Index'], resolve),\n                        },\n\n                        {\n                            path: 'profil/log',\n                            name: 'ProfileLogOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/profile/Log'], resolve),\n                        },\n\n                        {\n                            path: 'profil/log/detail/:data?',\n                            name: 'DetailProfileLogOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/profile/Old'], resolve),\n                        },\n\n                        {\n                            path: 'struktur',\n                            name: 'StructureOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/structure/Index'], resolve),\n                        },\n                        {\n                            path: 'motif-agenda',\n                            name: 'MotiveOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/motive/Index'], resolve),\n                        },\n                        {\n                            path: 'aktivitas',\n                            name: 'ActivitiesOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/activities/Index'], resolve),\n                        },\n                        {\n                            path: 'sikap',\n                            name: 'FigureOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/figure/Index'], resolve),\n                        },\n                        {\n                            path: 'prilaku',\n                            name: 'BehaviorOfOrganization',\n                            component: (resolve) => require(['@/pages/organization/behavior/Index'], resolve),\n                        },\n                    ],\n                },\n                {\n                    path: 'form',\n                    name: 'FormOfOrganization',\n                    component: (resolve) => require(['@/pages/organization/Form'], resolve),\n                    children: [\n                        {\n                            path: 'profile',\n                            name: 'FormOfOrganizationProfile',\n                            component: (resolve) => require(['@/pages/organization/profile/Form'], resolve),\n                        },\n                        {\n                            path: 'related-people',\n                            name: 'FormOfOrganizationOrganizer',\n                            component: (resolve) => require(['@/pages/organization/profile/PeopleRelated'], resolve),\n                        },\n                        {\n                            path: 'Structure',\n                            name: 'FormOfOrganizationStructure',\n                            component: (resolve) => require(['@/pages/organization/structure/Form'], resolve),\n                        },\n                    ],\n                },\n            ],\n        },\n        // Actor\n        {\n            path: '/tokoh/:id',\n            name: 'ActorPage',\n            component: (resolve) => require(['@/pages/actor/Shell'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: 'detail',\n                    name: 'DetailOfActor',\n                    component: (resolve) => require(['@/pages/actor/Index'], resolve),\n                    children: [\n                        {\n                            path: 'profil',\n                            name: 'ProfileOfActor',\n                            component: (resolve) => require(['@/pages/actor/profile/Index'], resolve),\n                        },\n                        {\n                            path: 'profil/log',\n                            name: 'ProfileLogOfActor',\n                            component: (resolve) => require(['@/pages/actor/profile/Log'], resolve),\n                        },\n                        {\n                            path: 'profil/log/detail/:data?',\n                            name: 'DetailProfileLogOfActor',\n                            component: (resolve) => require(['@/pages/actor/profile/Old'], resolve),\n                        },\n\n                        {\n                            path: 'karakter',\n                            name: 'CharacterOfActor',\n                            component: (resolve) => require(['@/pages/actor/character/Index'], resolve),\n                        },\n                        {\n                            path: 'ambisi',\n                            name: 'AmbitionOfActor',\n                            component: (resolve) => require(['@/pages/actor/ambition/Index'], resolve),\n                        },\n                        {\n                            path: 'opini',\n                            name: 'OpinionOfActor',\n                            component: (resolve) => require(['@/pages/actor/opinion/Index'], resolve),\n                        },\n                        {\n                            path: 'kekuatan',\n                            name: 'StrengthOfActor',\n                            component: (resolve) => require(['@/pages/actor/strength/Index'], resolve),\n                        },\n                        {\n                            path: 'keluarga',\n                            name: 'FamilyOfActor',\n                            component: (resolve) => require(['@/pages/actor/family/Index'], resolve),\n                        },\n                        {\n                            path: 'aktivitas',\n                            name: 'ActivitiesOfActor',\n                            component: (resolve) => require(['@/pages/actor/activities/Index'], resolve),\n                        },\n                        {\n                            path: 'motif-agenda',\n                            name: 'MotiveOfActor',\n                            component: (resolve) => require(['@/pages/actor/motive/Index'], resolve),\n                        },\n                        {\n                            path: 'sikap',\n                            name: 'FigureOfActor',\n                            component: (resolve) => require(['@/pages/actor/figure/Index'], resolve),\n                        },\n                        {\n                            path: 'perilaku',\n                            name: 'BehaviorOfActor',\n                            component: (resolve) => require(['@/pages/actor/behavior/Index'], resolve),\n                        },\n                    ],\n                },\n                {\n                    path: 'form',\n                    name: 'FormOfActor',\n                    component: (resolve) => require(['@/pages/actor/Form'], resolve),\n                    children: [\n                        {\n                            path: 'profile',\n                            name: 'ProfileOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/profile/Form'], resolve),\n                        },\n                        {\n                            path: 'bio',\n                            name: 'ProfileOfActorFormBio',\n                            component: (resolve) => require(['@/pages/actor/profile/FormBiography'], resolve),\n                        },\n                        {\n                            path: 'experience',\n                            name: 'ProfileOfActorFormExperience',\n                            component: (resolve) => require(['@/pages/actor/profile/FormExperience'], resolve),\n                        },\n                        {\n                            path: 'character',\n                            name: 'CharacterOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/character/Form'], resolve),\n                        },\n                        {\n                            path: 'ambition',\n                            name: 'AmbitionOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/ambition/Form'], resolve),\n                        },\n                        {\n                            path: 'opinion',\n                            name: 'opinionOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/opinion/Form'], resolve),\n                        },\n                        {\n                            path: 'strength',\n                            name: 'strengthOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/strength/Form'], resolve),\n                        },\n                        {\n                            path: 'family',\n                            name: 'familyOfActorForm',\n                            component: (resolve) => require(['@/pages/actor/family/Form'], resolve),\n                        },\n                    ],\n                },\n            ],\n\n        },\n        // Issue\n        {\n            // path:'/isu/:id',\n            path: '/isu/:id',\n            name: 'IssuePage',\n            component: (resolve) => require(['@/pages/issue/Shell'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: 'detail',\n                    name: 'IssueOfIndex',\n                    component: (resolve) => require(['@/pages/issue/Index'], resolve),\n                    children: [\n                        {\n                            path: 'profil',\n                            name: 'IssueOfprofile',\n                            component: (resolve) => require(['@/pages/issue/profile/Index'], resolve),\n                        },\n                        {\n                            path: 'aktivitas',\n                            name: 'IssueOfActivity',\n                            component: (resolve) => require(['@/pages/issue/activities/Index'], resolve),\n                        },\n                    ],\n                },\n                {\n                    path: 'form',\n                    name: 'FormOfIssue',\n                    component: (resolve) => require(['@/pages/issue/Form'], resolve),\n                    children: [\n                        {\n                            path: 'profil',\n                            name: 'IssueOfFormprofile',\n                            component: (resolve) => require(['@/pages/issue/profile/Form'], resolve),\n                        },\n                    ],\n                },\n            ],\n        },\n\n        // Management\n        {\n            path: '/manajemen',\n            name: 'ManagementPage',\n            component: (resolve) => require(['@/pages/management/Shell'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: 'isu/:id?/:data?',\n                    name: 'IssueOfActor',\n                    component: (resolve) => require(['@/pages/management/Index'], resolve),\n                },\n            ],\n        },\n\n        // general Cases\n        {\n            // path: '/cases/:id?/:data?',\n            path: '/cases/:id?',\n            // name: 'GeneralCasesShell',\n            component: (resolve) => require(['@/pages/general/cases/Shell.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: '',\n                    name: 'GeneralCasesIndex',\n                    component: (resolve) => require(['@/pages/general/cases/Index.vue'], resolve),\n                },\n                // {\n                //     path: 'form',\n                //     name: 'GeneralCasesForm',\n                //     component: resolve => require([\"@/pages/general/cases/Form.vue\"], resolve),\n                // },\n                {\n                    path: 'create',\n                    name: 'GeneralCasesCreate',\n                    component: (resolve) => require(['@/pages/general/cases/Form.vue'], resolve),\n                },\n                {\n                    path: 'edit',\n                    name: 'GeneralCasesEdit',\n                    component: (resolve) => require(['@/pages/general/cases/Form.vue'], resolve),\n                },\n            ],\n        },\n\n        // general profile\n        {\n            path: '/profile',\n            name: 'GeneralProfilePage',\n            component: (resolve) => require(['@/pages/general/profile/Index.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n        },\n\n        // general Help\n        {\n            path: '/help',\n            name: 'HelpPage',\n            component: (resolve) => require(['@/pages/general/help/Index.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n        },\n        // general profile\n        {\n            path: '/notification',\n            name: 'NotificationPage',\n            component: (resolve) => require(['@/pages/general/notification/Index.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n        },\n\n        // general ACL\n        {\n            path: '/acl',\n            name: 'AclPage',\n            component: (resolve) => require(['@/pages/general/acl/Index.vue'], resolve),\n        },\n\n        // general Roles\n        {\n            // path: '/roles/:id?/:data?',\n            path: '/roles/:id?',\n            // name: 'GeneralRolesShell',\n            component: (resolve) => require(['@/pages/general/roles/Shell.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: '',\n                    name: 'GeneralRolesIndex',\n                    component: (resolve) => require(['@/pages/general/roles/Index.vue'], resolve),\n                },\n                // {\n                //     path: 'form',\n                //     name: 'GeneralRolesForm',\n                //     component: resolve => require([\"@/pages/general/roles/Form.vue\"], resolve),\n                // },\n                {\n                    path: 'create',\n                    name: 'GeneralRolesCreate',\n                    component: (resolve) => require(['@/pages/general/roles/Form.vue'], resolve),\n                },\n                {\n                    path: 'edit',\n                    name: 'GeneralRolesEdit',\n                    component: (resolve) => require(['@/pages/general/roles/Form.vue'], resolve),\n                },\n            ],\n        },\n\n        // general Users\n        {\n            // path: '/users/:id?/:data?',\n            path: '/users/:id?',\n            // name: 'GeneralUsersShell',\n            component: (resolve) => require(['@/pages/general/users/Shell.vue'], resolve),\n            meta: {\n                requiresAuth: true,\n            },\n            children: [\n                {\n                    path: '',\n                    name: 'GeneralUsersIndex',\n                    component: (resolve) => require(['@/pages/general/users/Index.vue'], resolve),\n                },\n                // {\n                //     path: 'form',\n                //     name: 'GeneralUsersForm',\n                //     component: resolve => require([\"@/pages/general/users/Form.vue\"], resolve),\n                // },\n                {\n                    path: 'create',\n                    name: 'GeneralUsersCreate',\n                    component: (resolve) => require(['@/pages/general/users/Form.vue'], resolve),\n                },\n                {\n                    path: 'edit',\n                    name: 'GeneralUsersEdit',\n                    component: (resolve) => require(['@/pages/general/users/Form.vue'], resolve),\n                },\n            ],\n        },\n    ],\n});\n"],"sourceRoot":""}